

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sat Dec 21 18:01:26 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=3
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    34                           	dabs	1,0x7E,2
    35     0000                     
    36                           ; Generated 12/10/2023 GMT
    37                           ; 
    38                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution. Publication is not required when
    52                           ;        this file is used in an embedded application.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC16F877A Definitions
    68                           ; 
    69                           ; SFR Addresses
    70     0000                     	;# 
    71     0001                     	;# 
    72     0002                     	;# 
    73     0003                     	;# 
    74     0004                     	;# 
    75     0005                     	;# 
    76     0006                     	;# 
    77     0007                     	;# 
    78     0008                     	;# 
    79     0009                     	;# 
    80     000A                     	;# 
    81     000B                     	;# 
    82     000C                     	;# 
    83     000D                     	;# 
    84     000E                     	;# 
    85     000E                     	;# 
    86     000F                     	;# 
    87     0010                     	;# 
    88     0011                     	;# 
    89     0012                     	;# 
    90     0013                     	;# 
    91     0014                     	;# 
    92     0015                     	;# 
    93     0015                     	;# 
    94     0016                     	;# 
    95     0017                     	;# 
    96     0018                     	;# 
    97     0019                     	;# 
    98     001A                     	;# 
    99     001B                     	;# 
   100     001B                     	;# 
   101     001C                     	;# 
   102     001D                     	;# 
   103     001E                     	;# 
   104     001F                     	;# 
   105     0081                     	;# 
   106     0085                     	;# 
   107     0086                     	;# 
   108     0087                     	;# 
   109     0088                     	;# 
   110     0089                     	;# 
   111     008C                     	;# 
   112     008D                     	;# 
   113     008E                     	;# 
   114     0091                     	;# 
   115     0092                     	;# 
   116     0093                     	;# 
   117     0094                     	;# 
   118     0098                     	;# 
   119     0099                     	;# 
   120     009C                     	;# 
   121     009D                     	;# 
   122     009E                     	;# 
   123     009F                     	;# 
   124     010C                     	;# 
   125     010D                     	;# 
   126     010E                     	;# 
   127     010F                     	;# 
   128     018C                     	;# 
   129     018D                     	;# 
   130     0000                     	;# 
   131     0001                     	;# 
   132     0002                     	;# 
   133     0003                     	;# 
   134     0004                     	;# 
   135     0005                     	;# 
   136     0006                     	;# 
   137     0007                     	;# 
   138     0008                     	;# 
   139     0009                     	;# 
   140     000A                     	;# 
   141     000B                     	;# 
   142     000C                     	;# 
   143     000D                     	;# 
   144     000E                     	;# 
   145     000E                     	;# 
   146     000F                     	;# 
   147     0010                     	;# 
   148     0011                     	;# 
   149     0012                     	;# 
   150     0013                     	;# 
   151     0014                     	;# 
   152     0015                     	;# 
   153     0015                     	;# 
   154     0016                     	;# 
   155     0017                     	;# 
   156     0018                     	;# 
   157     0019                     	;# 
   158     001A                     	;# 
   159     001B                     	;# 
   160     001B                     	;# 
   161     001C                     	;# 
   162     001D                     	;# 
   163     001E                     	;# 
   164     001F                     	;# 
   165     0081                     	;# 
   166     0085                     	;# 
   167     0086                     	;# 
   168     0087                     	;# 
   169     0088                     	;# 
   170     0089                     	;# 
   171     008C                     	;# 
   172     008D                     	;# 
   173     008E                     	;# 
   174     0091                     	;# 
   175     0092                     	;# 
   176     0093                     	;# 
   177     0094                     	;# 
   178     0098                     	;# 
   179     0099                     	;# 
   180     009C                     	;# 
   181     009D                     	;# 
   182     009E                     	;# 
   183     009F                     	;# 
   184     010C                     	;# 
   185     010D                     	;# 
   186     010E                     	;# 
   187     010F                     	;# 
   188     018C                     	;# 
   189     018D                     	;# 
   190     001A                     _RCREG	set	26
   191     000C                     _PIR1bits	set	12
   192     0018                     _RCSTAbits	set	24
   193     0031                     _RB1	set	49
   194     0030                     _RB0	set	48
   195     0035                     _RB5	set	53
   196     0034                     _RB4	set	52
   197     0033                     _RB3	set	51
   198     0032                     _RB2	set	50
   199     0087                     _TRISCbits	set	135
   200     0099                     _SPBRG	set	153
   201     0098                     _TXSTAbits	set	152
   202     0086                     _TRISB	set	134
   203                           
   204                           	psect	strings
   205     0003                     __pstrings:
   206     0003                     stringtab:
   207     0003                     __stringtab:
   208     0003                     stringcode:	
   209                           ;	String table - string pointers are 1 byte each
   210                           
   211     0003                     stringdir:
   212     0003  3000               	movlw	high stringdir
   213     0004  008A               	movwf	10
   214     0005  0804               	movf	4,w
   215     0006  0A84               	incf	4,f
   216     0007  0782               	addwf	2,f
   217     0008                     __stringbase:
   218     0008  3400               	retlw	0
   219     0009                     __end_of__stringtab:
   220     0009                     STR_1:
   221     0009  3441               	retlw	65	;'A'
   222     000A  3444               	retlw	68	;'D'
   223     000B  3443               	retlw	67	;'C'
   224     000C  3425               	retlw	37	;'%'
   225     000D  3464               	retlw	100	;'d'
   226     000E  343D               	retlw	61	;'='
   227     000F  3425               	retlw	37	;'%'
   228     0010  3475               	retlw	117	;'u'
   229     0011  3400               	retlw	0
   230                           
   231                           	psect	cinit
   232     07EB                     start_initialization:	
   233                           ; #config settings
   234                           
   235     07EB                     __initialization:
   236                           
   237                           ; Clear objects allocated to BANK0
   238     07EB  1383               	bcf	3,7	;select IRP bank0
   239     07EC  3020               	movlw	low __pbssBANK0
   240     07ED  0084               	movwf	4
   241     07EE  3047               	movlw	low (__pbssBANK0+39)
   242     07EF  120A  118A  2228  120A  118A  	fcall	clear_ram0
   243                           
   244                           ; Clear objects allocated to BANK1
   245     07F4  30A0               	movlw	low __pbssBANK1
   246     07F5  0084               	movwf	4
   247     07F6  30C8               	movlw	low (__pbssBANK1+40)
   248     07F7  120A  118A  2228  120A  118A  	fcall	clear_ram0
   249     07FC                     end_of_initialization:	
   250                           ;End of C runtime variable initialization code
   251                           
   252     07FC                     __end_of__initialization:
   253     07FC  0183               	clrf	3
   254     07FD  120A  118A  2DBB   	ljmp	_main	;jump to C main() function
   255                           
   256                           	psect	bssBANK0
   257     0020                     __pbssBANK0:
   258     0020                     _dbuf:
   259     0020                     	ds	32
   260     0040                     _width:
   261     0040                     	ds	2
   262     0042                     _prec:
   263     0042                     	ds	2
   264     0044                     _received_value:
   265     0044                     	ds	2
   266     0046                     _flags:
   267     0046                     	ds	1
   268                           
   269                           	psect	bssBANK1
   270     00A0                     __pbssBANK1:
   271     00A0                     _receivedData:
   272     00A0                     	ds	20
   273     00B4                     _s:
   274     00B4                     	ds	20
   275                           
   276                           	psect	clrtext
   277     0228                     clear_ram0:	
   278                           ;	Called with FSR containing the base address, and
   279                           ;	W with the last address+1
   280                           
   281     0228  0064               	clrwdt	;clear the watchdog before getting into this loop
   282     0229                     clrloop0:
   283     0229  0180               	clrf	0	;clear RAM location pointed to by FSR
   284     022A  0A84               	incf	4,f	;increment pointer
   285     022B  0604               	xorwf	4,w	;XOR with final address
   286     022C  1903               	btfsc	3,2	;have we reached the end yet?
   287     022D  3400               	retlw	0	;all done for this memory range, return
   288     022E  0604               	xorwf	4,w	;XOR again to restore value
   289     022F  2A29               	goto	clrloop0	;do the next byte
   290                           
   291                           	psect	cstackBANK3
   292     0190                     __pcstackBANK3:
   293     0190                     main@adcDisplay:
   294                           
   295                           ; 80 bytes @ 0x0
   296     0190                     	ds	80
   297     01E0                     main@adcValues:
   298                           
   299                           ; 8 bytes @ 0x50
   300     01E0                     	ds	8
   301     01E8                     main@high_byte:
   302                           
   303                           ; 1 bytes @ 0x58
   304     01E8                     	ds	1
   305     01E9                     main@low_byte:
   306                           
   307                           ; 1 bytes @ 0x59
   308     01E9                     	ds	1
   309     01EA                     main@i:
   310                           
   311                           ; 2 bytes @ 0x5A
   312     01EA                     	ds	2
   313                           
   314                           	psect	cstackCOMMON
   315     0070                     __pcstackCOMMON:
   316     0070                     ?_putch:
   317     0070                     ??_putch:	
   318                           ; 1 bytes @ 0x0
   319                           
   320     0070                     ?_Lcd_Port:	
   321                           ; 1 bytes @ 0x0
   322                           
   323     0070                     ??_Lcd_Port:	
   324                           ; 1 bytes @ 0x0
   325                           
   326     0070                     ?_Lcd_Cmd:	
   327                           ; 1 bytes @ 0x0
   328                           
   329     0070                     ?_Lcd_Clear:	
   330                           ; 1 bytes @ 0x0
   331                           
   332     0070                     ?_Lcd_Init:	
   333                           ; 1 bytes @ 0x0
   334                           
   335     0070                     ?_Lcd_Write_Char:	
   336                           ; 1 bytes @ 0x0
   337                           
   338     0070                     ?_Lcd_Write_String:	
   339                           ; 1 bytes @ 0x0
   340                           
   341     0070                     ?_LCD:	
   342                           ; 1 bytes @ 0x0
   343                           
   344     0070                     ??_LCD:	
   345                           ; 1 bytes @ 0x0
   346                           
   347     0070                     ?_UART_Init_Rx:	
   348                           ; 1 bytes @ 0x0
   349                           
   350     0070                     ??_UART_Init_Rx:	
   351                           ; 1 bytes @ 0x0
   352                           
   353     0070                     ?_UART_Read:	
   354                           ; 1 bytes @ 0x0
   355                           
   356     0070                     ??_UART_Read:	
   357                           ; 1 bytes @ 0x0
   358                           
   359     0070                     ?_main:	
   360                           ; 1 bytes @ 0x0
   361                           
   362     0070                     ?_fputc:	
   363                           ; 1 bytes @ 0x0
   364                           
   365     0070                     ?___awdiv:	
   366                           ; 2 bytes @ 0x0
   367                           
   368     0070                     ?___awmod:	
   369                           ; 2 bytes @ 0x0
   370                           
   371     0070                     ?___lwdiv:	
   372                           ; 2 bytes @ 0x0
   373                           
   374     0070                     ?___lwmod:	
   375                           ; 2 bytes @ 0x0
   376                           
   377     0070                     Lcd_Port@a:	
   378                           ; 2 bytes @ 0x0
   379                           
   380     0070                     putch@c:	
   381                           ; 1 bytes @ 0x0
   382                           
   383     0070                     ___awdiv@divisor:	
   384                           ; 1 bytes @ 0x0
   385                           
   386     0070                     ___awmod@divisor:	
   387                           ; 2 bytes @ 0x0
   388                           
   389     0070                     ___lwdiv@divisor:	
   390                           ; 2 bytes @ 0x0
   391                           
   392     0070                     ___lwmod@divisor:	
   393                           ; 2 bytes @ 0x0
   394                           
   395     0070                     fputc@c:	
   396                           ; 2 bytes @ 0x0
   397                           
   398                           
   399                           ; 2 bytes @ 0x0
   400     0070                     	ds	1
   401     0071                     ??_Lcd_Cmd:
   402     0071                     ??_Lcd_Write_Char:	
   403                           ; 1 bytes @ 0x1
   404                           
   405                           
   406                           ; 1 bytes @ 0x1
   407     0071                     	ds	1
   408     0072                     Lcd_Write_Char@temp:
   409     0072                     fputc@fp:	
   410                           ; 1 bytes @ 0x2
   411                           
   412     0072                     ___awdiv@dividend:	
   413                           ; 1 bytes @ 0x2
   414                           
   415     0072                     ___awmod@dividend:	
   416                           ; 2 bytes @ 0x2
   417                           
   418     0072                     ___lwdiv@dividend:	
   419                           ; 2 bytes @ 0x2
   420                           
   421     0072                     ___lwmod@dividend:	
   422                           ; 2 bytes @ 0x2
   423                           
   424                           
   425                           ; 2 bytes @ 0x2
   426     0072                     	ds	1
   427     0073                     ??_fputc:
   428     0073                     Lcd_Cmd@a:	
   429                           ; 1 bytes @ 0x3
   430                           
   431     0073                     Lcd_Write_Char@y:	
   432                           ; 1 bytes @ 0x3
   433                           
   434                           
   435                           ; 1 bytes @ 0x3
   436     0073                     	ds	1
   437     0074                     ??_Lcd_Clear:
   438     0074                     ?_Lcd_Set_Cursor:	
   439                           ; 1 bytes @ 0x4
   440                           
   441     0074                     ??_Lcd_Init:	
   442                           ; 1 bytes @ 0x4
   443                           
   444     0074                     ??___awdiv:	
   445                           ; 1 bytes @ 0x4
   446                           
   447     0074                     ??___awmod:	
   448                           ; 1 bytes @ 0x4
   449                           
   450     0074                     ??___lwdiv:	
   451                           ; 1 bytes @ 0x4
   452                           
   453     0074                     ??___lwmod:	
   454                           ; 1 bytes @ 0x4
   455                           
   456     0074                     Lcd_Set_Cursor@b:	
   457                           ; 1 bytes @ 0x4
   458                           
   459     0074                     Lcd_Write_Char@a:	
   460                           ; 1 bytes @ 0x4
   461                           
   462     0074                     ___awdiv@counter:	
   463                           ; 1 bytes @ 0x4
   464                           
   465     0074                     ___awmod@counter:	
   466                           ; 1 bytes @ 0x4
   467                           
   468     0074                     ___lwmod@counter:	
   469                           ; 1 bytes @ 0x4
   470                           
   471     0074                     ___lwdiv@quotient:	
   472                           ; 1 bytes @ 0x4
   473                           
   474                           
   475                           ; 2 bytes @ 0x4
   476     0074                     	ds	1
   477     0075                     ??_Lcd_Set_Cursor:
   478     0075                     ??_Lcd_Write_String:	
   479                           ; 1 bytes @ 0x5
   480                           
   481     0075                     ___awdiv@sign:	
   482                           ; 1 bytes @ 0x5
   483                           
   484     0075                     ___awmod@sign:	
   485                           ; 1 bytes @ 0x5
   486                           
   487                           
   488                           ; 1 bytes @ 0x5
   489     0075                     	ds	1
   490     0076                     ?_abs:
   491     0076                     Lcd_Set_Cursor@a:	
   492                           ; 2 bytes @ 0x6
   493                           
   494     0076                     ___lwdiv@counter:	
   495                           ; 1 bytes @ 0x6
   496                           
   497     0076                     Lcd_Write_String@i:	
   498                           ; 1 bytes @ 0x6
   499                           
   500     0076                     ___awdiv@quotient:	
   501                           ; 2 bytes @ 0x6
   502                           
   503     0076                     abs@a:	
   504                           ; 2 bytes @ 0x6
   505                           
   506                           
   507                           ; 2 bytes @ 0x6
   508     0076                     	ds	1
   509     0077                     Lcd_Set_Cursor@z:
   510                           
   511                           ; 1 bytes @ 0x7
   512     0077                     	ds	1
   513     0078                     ??_abs:
   514     0078                     Lcd_Set_Cursor@y:	
   515                           ; 1 bytes @ 0x8
   516                           
   517     0078                     Lcd_Write_String@a:	
   518                           ; 1 bytes @ 0x8
   519                           
   520                           
   521                           ; 1 bytes @ 0x8
   522     0078                     	ds	1
   523     0079                     Lcd_Set_Cursor@temp:
   524                           
   525                           ; 1 bytes @ 0x9
   526     0079                     	ds	1
   527     007A                     ?_vfpfcnvrt:
   528     007A                     vfpfcnvrt@fmt:	
   529                           ; 1 bytes @ 0xA
   530                           
   531                           
   532                           ; 1 bytes @ 0xA
   533     007A                     	ds	1
   534     007B                     vfpfcnvrt@ap:
   535                           
   536                           ; 1 bytes @ 0xB
   537     007B                     	ds	1
   538     007C                     ??_vfpfcnvrt:
   539                           
   540                           ; 1 bytes @ 0xC
   541     007C                     	ds	2
   542     007E                     ??_vfprintf:
   543                           
   544                           	psect	cstackBANK0
   545     0047                     __pcstackBANK0:	
   546                           ; 1 bytes @ 0xE
   547                           
   548     0047                     vfpfcnvrt@done:
   549                           
   550                           ; 1 bytes @ 0x0
   551     0047                     	ds	1
   552     0048                     vfpfcnvrt@fp:
   553                           
   554                           ; 1 bytes @ 0x1
   555     0048                     	ds	1
   556     0049                     vfpfcnvrt@cp:
   557                           
   558                           ; 1 bytes @ 0x2
   559     0049                     	ds	1
   560     004A                     vfpfcnvrt@convarg:
   561                           
   562                           ; 4 bytes @ 0x3
   563     004A                     	ds	4
   564     004E                     vfpfcnvrt@c:
   565                           
   566                           ; 1 bytes @ 0x7
   567     004E                     	ds	1
   568     004F                     ?_vfprintf:
   569     004F                     vfprintf@fmt:	
   570                           ; 2 bytes @ 0x8
   571                           
   572                           
   573                           ; 1 bytes @ 0x8
   574     004F                     	ds	1
   575     0050                     vfprintf@ap:
   576                           
   577                           ; 1 bytes @ 0x9
   578     0050                     	ds	1
   579     0051                     vfprintf@fp:
   580                           
   581                           ; 1 bytes @ 0xA
   582     0051                     	ds	1
   583     0052                     vfprintf@cfmt:
   584                           
   585                           ; 1 bytes @ 0xB
   586     0052                     	ds	1
   587     0053                     ?_sprintf:
   588     0053                     sprintf@fmt:	
   589                           ; 2 bytes @ 0xC
   590                           
   591                           
   592                           ; 1 bytes @ 0xC
   593     0053                     	ds	5
   594     0058                     ??_sprintf:
   595                           
   596                           ; 1 bytes @ 0x11
   597     0058                     	ds	1
   598     0059                     sprintf@ap:
   599                           
   600                           ; 1 bytes @ 0x12
   601     0059                     	ds	1
   602     005A                     sprintf@s:
   603                           
   604                           ; 1 bytes @ 0x13
   605     005A                     	ds	1
   606     005B                     sprintf@f:
   607                           
   608                           ; 11 bytes @ 0x14
   609     005B                     	ds	11
   610     0066                     ??_main:
   611                           
   612                           ; 1 bytes @ 0x1F
   613     0066                     	ds	2
   614                           
   615                           	psect	maintext
   616     05BB                     __pmaintext:	
   617 ;;
   618 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   619 ;;
   620 ;; *************** function _main *****************
   621 ;; Defined at:
   622 ;;		line 189 in file "picUARTrx.c"
   623 ;; Parameters:    Size  Location     Type
   624 ;;		None
   625 ;; Auto vars:     Size  Location     Type
   626 ;;  low_byte        1   89[BANK3 ] unsigned char 
   627 ;;  high_byte       1   88[BANK3 ] unsigned char 
   628 ;;  i               2   90[BANK3 ] int 
   629 ;;  adcDisplay     80    0[BANK3 ] unsigned char [20][4]
   630 ;;  adcValues       8   80[BANK3 ] unsigned int [4]
   631 ;; Return value:  Size  Location     Type
   632 ;;                  1    wreg      void 
   633 ;; Registers used:
   634 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   635 ;; Tracked objects:
   636 ;;		On entry : B00/0
   637 ;;		On exit  : 0/0
   638 ;;		Unchanged: 0/0
   639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   640 ;;      Params:         0       0       0       0       0
   641 ;;      Locals:         0       0       0      92       0
   642 ;;      Temps:          0       2       0       0       0
   643 ;;      Totals:         0       2       0      92       0
   644 ;;Total ram usage:       94 bytes
   645 ;; Hardware stack levels required when called: 5
   646 ;; This function calls:
   647 ;;		_LCD
   648 ;;		_Lcd_Clear
   649 ;;		_Lcd_Init
   650 ;;		_Lcd_Set_Cursor
   651 ;;		_Lcd_Write_String
   652 ;;		_UART_Init_Rx
   653 ;;		_UART_Read
   654 ;;		_sprintf
   655 ;; This function is called by:
   656 ;;		Startup code after reset
   657 ;; This function uses a non-reentrant model
   658 ;;
   659                           
   660     05BB                     _main:	
   661                           ;psect for function _main
   662                           
   663     05BB                     l1554:	
   664                           ;incstack = 0
   665                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   666                           
   667                           
   668                           ;picUARTrx.c: 191:     LCD();
   669     05BB  120A  118A  221C  120A  118A  	fcall	_LCD
   670     05C0                     l1556:
   671                           
   672                           ;picUARTrx.c: 192:     Lcd_Init();
   673     05C0  120A  118A  2469  120A  118A  	fcall	_Lcd_Init
   674     05C5                     l1558:
   675                           
   676                           ;picUARTrx.c: 193:     UART_Init_Rx();
   677     05C5  120A  118A  2268  120A  118A  	fcall	_UART_Init_Rx
   678     05CA                     l1560:
   679                           
   680                           ;picUARTrx.c: 194:     Lcd_Clear();
   681     05CA  120A  118A  2230  120A  118A  	fcall	_Lcd_Clear
   682     05CF                     l1562:
   683                           
   684                           ;picUARTrx.c: 196:         unsigned int adcValues[4];;picUARTrx.c: 197:         char adc
      +                          Display[4][20];;picUARTrx.c: 199:         for(int i=0; i<4; i++){
   685     05CF  1683               	bsf	3,5	;RP0=1, select bank3
   686     05D0  1703               	bsf	3,6	;RP1=1, select bank3
   687     05D1  01EA               	clrf	main@i^(0+384)
   688     05D2  01EB               	clrf	(main@i+1)^(0+384)
   689     05D3                     l1568:
   690                           
   691                           ;picUARTrx.c: 200:             unsigned char high_byte = UART_Read();
   692     05D3  120A  118A  2220  120A  118A  	fcall	_UART_Read
   693     05D8  1683               	bsf	3,5	;RP0=1, select bank3
   694     05D9  1703               	bsf	3,6	;RP1=1, select bank3
   695     05DA  00E8               	movwf	main@high_byte^(0+384)
   696                           
   697                           ;picUARTrx.c: 201:             unsigned char low_byte = UART_Read();
   698     05DB  120A  118A  2220  120A  118A  	fcall	_UART_Read
   699     05E0  1683               	bsf	3,5	;RP0=1, select bank3
   700     05E1  1703               	bsf	3,6	;RP1=1, select bank3
   701     05E2  00E9               	movwf	main@low_byte^(0+384)
   702     05E3                     l1570:
   703                           
   704                           ;picUARTrx.c: 203:             adcValues[i] = (high_byte << 8) | low_byte;
   705     05E3  086A               	movf	main@i^(0+384),w
   706     05E4  1283               	bcf	3,5	;RP0=0, select bank0
   707     05E5  1303               	bcf	3,6	;RP1=0, select bank0
   708     05E6  00E6               	movwf	??_main
   709     05E7  0766               	addwf	??_main,w
   710     05E8  3EE0               	addlw	(low (main@adcValues| (0+256)))& (0+255)
   711     05E9  0084               	movwf	4
   712     05EA  1683               	bsf	3,5	;RP0=1, select bank3
   713     05EB  1703               	bsf	3,6	;RP1=1, select bank3
   714     05EC  0869               	movf	main@low_byte^(0+384),w
   715     05ED  1783               	bsf	3,7	;select IRP bank3
   716     05EE  0080               	movwf	0
   717     05EF  0A84               	incf	4,f
   718     05F0  0868               	movf	main@high_byte^(0+384),w
   719     05F1  0080               	movwf	0
   720     05F2                     l1572:
   721                           
   722                           ;picUARTrx.c: 204:             sprintf(adcDisplay[i], "ADC%d=%u", i, adcValues[i]);
   723     05F2  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   724     05F3  1283               	bcf	3,5	;RP0=0, select bank0
   725     05F4  1303               	bcf	3,6	;RP1=0, select bank0
   726     05F5  00D3               	movwf	sprintf@fmt
   727     05F6  1683               	bsf	3,5	;RP0=1, select bank3
   728     05F7  1703               	bsf	3,6	;RP1=1, select bank3
   729     05F8  086B               	movf	(main@i+1)^(0+384),w
   730     05F9  1283               	bcf	3,5	;RP0=0, select bank0
   731     05FA  1303               	bcf	3,6	;RP1=0, select bank0
   732     05FB  00D5               	movwf	?_sprintf+2
   733     05FC  1683               	bsf	3,5	;RP0=1, select bank3
   734     05FD  1703               	bsf	3,6	;RP1=1, select bank3
   735     05FE  086A               	movf	main@i^(0+384),w
   736     05FF  1283               	bcf	3,5	;RP0=0, select bank0
   737     0600  1303               	bcf	3,6	;RP1=0, select bank0
   738     0601  00D4               	movwf	?_sprintf+1
   739     0602  1683               	bsf	3,5	;RP0=1, select bank3
   740     0603  1703               	bsf	3,6	;RP1=1, select bank3
   741     0604  086A               	movf	main@i^(0+384),w
   742     0605  1283               	bcf	3,5	;RP0=0, select bank0
   743     0606  1303               	bcf	3,6	;RP1=0, select bank0
   744     0607  00E6               	movwf	??_main
   745     0608  0766               	addwf	??_main,w
   746     0609  3EE0               	addlw	(low (main@adcValues| (0+256)))& (0+255)
   747     060A  0084               	movwf	4
   748     060B  0800               	movf	0,w
   749     060C  00D6               	movwf	?_sprintf+3
   750     060D  0A84               	incf	4,f
   751     060E  0800               	movf	0,w
   752     060F  00D7               	movwf	?_sprintf+4
   753     0610  1683               	bsf	3,5	;RP0=1, select bank3
   754     0611  1703               	bsf	3,6	;RP1=1, select bank3
   755     0612  0E6A               	swapf	main@i^(0+384),w
   756     0613  39F0               	andlw	240
   757     0614  1283               	bcf	3,5	;RP0=0, select bank0
   758     0615  1303               	bcf	3,6	;RP1=0, select bank0
   759     0616  00E7               	movwf	??_main+1
   760     0617  1683               	bsf	3,5	;RP0=1, select bank3
   761     0618  1703               	bsf	3,6	;RP1=1, select bank3
   762     0619  086A               	movf	main@i^(0+384),w
   763     061A  076A               	addwf	main@i^(0+384),w
   764     061B  1283               	bcf	3,5	;RP0=0, select bank0
   765     061C  1303               	bcf	3,6	;RP1=0, select bank0
   766     061D  07E7               	addwf	??_main+1,f
   767     061E  07E7               	addwf	??_main+1,f
   768     061F  0867               	movf	??_main+1,w
   769     0620  3E90               	addlw	(low (main@adcDisplay| (0+256)))& (0+255)
   770     0621  120A  118A  2282  120A  118A  	fcall	_sprintf
   771     0626                     l1574:
   772                           
   773                           ;picUARTrx.c: 205:         }
   774     0626  3001               	movlw	1
   775     0627  1683               	bsf	3,5	;RP0=1, select bank3
   776     0628  1703               	bsf	3,6	;RP1=1, select bank3
   777     0629  07EA               	addwf	main@i^(0+384),f
   778     062A  1803               	skipnc
   779     062B  0AEB               	incf	(main@i+1)^(0+384),f
   780     062C  3000               	movlw	0
   781     062D  07EB               	addwf	(main@i+1)^(0+384),f
   782     062E                     l1576:
   783     062E  086B               	movf	(main@i+1)^(0+384),w
   784     062F  3A80               	xorlw	128
   785     0630  00FF               	movwf	btemp+1
   786     0631  3080               	movlw	128
   787     0632  027F               	subwf	btemp+1,w
   788     0633  1D03               	skipz
   789     0634  2E37               	goto	u1385
   790     0635  3004               	movlw	4
   791     0636  026A               	subwf	main@i^(0+384),w
   792     0637                     u1385:
   793     0637  1C03               	skipc
   794     0638  2E3A               	goto	u1381
   795     0639  2E3B               	goto	u1380
   796     063A                     u1381:
   797     063A  2DD3               	goto	l1568
   798     063B                     u1380:
   799     063B                     l1578:
   800                           
   801                           ;picUARTrx.c: 208:         Lcd_Set_Cursor(1, 1);
   802     063B  01F4               	clrf	Lcd_Set_Cursor@b
   803     063C  0AF4               	incf	Lcd_Set_Cursor@b,f
   804     063D  3001               	movlw	1
   805     063E  120A  118A  252E  120A  118A  	fcall	_Lcd_Set_Cursor
   806     0643                     l1580:
   807                           
   808                           ;picUARTrx.c: 209:         Lcd_Write_String(adcDisplay[0]);
   809     0643  3090               	movlw	(low (main@adcDisplay| (0+256)))& (0+255)
   810     0644  120A  118A  22A1  120A  118A  	fcall	_Lcd_Write_String
   811     0649                     l1582:
   812                           
   813                           ;picUARTrx.c: 210:         Lcd_Set_Cursor(2, 1);
   814     0649  01F4               	clrf	Lcd_Set_Cursor@b
   815     064A  0AF4               	incf	Lcd_Set_Cursor@b,f
   816     064B  3002               	movlw	2
   817     064C  120A  118A  252E  120A  118A  	fcall	_Lcd_Set_Cursor
   818                           
   819                           ;picUARTrx.c: 211:         Lcd_Write_String(adcDisplay[1]);
   820     0651  30A4               	movlw	(low ((main@adcDisplay| (0+256)+20)))& (0+255)
   821     0652  120A  118A  22A1  120A  118A  	fcall	_Lcd_Write_String
   822     0657                     l1584:
   823                           
   824                           ;picUARTrx.c: 212:         Lcd_Set_Cursor(3, 1);
   825     0657  01F4               	clrf	Lcd_Set_Cursor@b
   826     0658  0AF4               	incf	Lcd_Set_Cursor@b,f
   827     0659  3003               	movlw	3
   828     065A  120A  118A  252E  120A  118A  	fcall	_Lcd_Set_Cursor
   829     065F                     l1586:
   830                           
   831                           ;picUARTrx.c: 213:         Lcd_Write_String(adcDisplay[2]);
   832     065F  30B8               	movlw	(low ((main@adcDisplay| (0+256)+40)))& (0+255)
   833     0660  120A  118A  22A1  120A  118A  	fcall	_Lcd_Write_String
   834                           
   835                           ;picUARTrx.c: 214:         Lcd_Set_Cursor(4, 1);
   836     0665  01F4               	clrf	Lcd_Set_Cursor@b
   837     0666  0AF4               	incf	Lcd_Set_Cursor@b,f
   838     0667  3004               	movlw	4
   839     0668  120A  118A  252E  120A  118A  	fcall	_Lcd_Set_Cursor
   840     066D                     l1588:
   841                           
   842                           ;picUARTrx.c: 215:         Lcd_Write_String(adcDisplay[3]);
   843     066D  30CC               	movlw	(low ((main@adcDisplay| (0+256)+60)))& (0+255)
   844     066E  120A  118A  22A1  120A  118A  	fcall	_Lcd_Write_String
   845     0673                     l1590:
   846                           
   847                           ;picUARTrx.c: 217:         _delay((unsigned long)((100)*(20000000/4000000.0)));
   848     0673  30A5               	movlw	165
   849     0674  1283               	bcf	3,5	;RP0=0, select bank0
   850     0675  1303               	bcf	3,6	;RP1=0, select bank0
   851     0676  00E6               	movwf	??_main
   852     0677                     u1397:
   853     0677  0BE6               	decfsz	??_main,f
   854     0678  2E77               	goto	u1397
   855     0679  2E7A               	nop2
   856     067A  2DCF               	goto	l1562
   857     067B  120A  118A  2800   	ljmp	start
   858     067E                     __end_of_main:
   859                           
   860                           	psect	text1
   861     0282                     __ptext1:	
   862 ;; *************** function _sprintf *****************
   863 ;; Defined at:
   864 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_sprintf.c"
   865 ;; Parameters:    Size  Location     Type
   866 ;;  s               1    wreg     PTR unsigned char 
   867 ;;		 -> main@adcDisplay(80), 
   868 ;;  fmt             1   12[BANK0 ] PTR const unsigned char 
   869 ;;		 -> STR_1(9), 
   870 ;; Auto vars:     Size  Location     Type
   871 ;;  s               1   19[BANK0 ] PTR unsigned char 
   872 ;;		 -> main@adcDisplay(80), 
   873 ;;  f              11   20[BANK0 ] struct _IO_FILE
   874 ;;  ret             2    0        int 
   875 ;;  ap              1   18[BANK0 ] PTR void [1]
   876 ;;		 -> ?_sprintf(2), 
   877 ;; Return value:  Size  Location     Type
   878 ;;                  2   12[BANK0 ] int 
   879 ;; Registers used:
   880 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   881 ;; Tracked objects:
   882 ;;		On entry : 0/0
   883 ;;		On exit  : 0/0
   884 ;;		Unchanged: 0/0
   885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   886 ;;      Params:         0       5       0       0       0
   887 ;;      Locals:         0      13       0       0       0
   888 ;;      Temps:          0       1       0       0       0
   889 ;;      Totals:         0      19       0       0       0
   890 ;;Total ram usage:       19 bytes
   891 ;; Hardware stack levels used: 1
   892 ;; Hardware stack levels required when called: 4
   893 ;; This function calls:
   894 ;;		_vfprintf
   895 ;; This function is called by:
   896 ;;		_main
   897 ;; This function uses a non-reentrant model
   898 ;;
   899                           
   900     0282                     _sprintf:	
   901                           ;psect for function _sprintf
   902                           
   903                           
   904                           ;incstack = 0
   905                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   906                           ;sprintf@s stored from wreg
   907     0282  1283               	bcf	3,5	;RP0=0, select bank0
   908     0283  1303               	bcf	3,6	;RP1=0, select bank0
   909     0284  00DA               	movwf	sprintf@s
   910     0285                     l1526:
   911     0285  3054               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
   912     0286  00D9               	movwf	sprintf@ap
   913     0287  085A               	movf	sprintf@s,w
   914     0288  00DB               	movwf	sprintf@f
   915     0289                     l1528:
   916     0289  01DD               	clrf	sprintf@f+2
   917     028A  01DE               	clrf	sprintf@f+3
   918     028B                     l1530:
   919     028B  01E4               	clrf	sprintf@f+9
   920     028C  01E5               	clrf	sprintf@f+10
   921     028D                     l1532:
   922     028D  0853               	movf	sprintf@fmt,w
   923     028E  00CF               	movwf	vfprintf@fmt
   924     028F  3059               	movlw	(low (sprintf@ap| 0))& (0+255)
   925     0290  00D0               	movwf	vfprintf@ap
   926     0291  305B               	movlw	(low (sprintf@f| 0))& (0+255)
   927     0292  120A  118A  22C2  120A  118A  	fcall	_vfprintf
   928     0297                     l1534:
   929     0297  1283               	bcf	3,5	;RP0=0, select bank0
   930     0298  1303               	bcf	3,6	;RP1=0, select bank0
   931     0299  085D               	movf	sprintf@f+2,w
   932     029A  075A               	addwf	sprintf@s,w
   933     029B  00D8               	movwf	??_sprintf
   934     029C  0858               	movf	??_sprintf,w
   935     029D  0084               	movwf	4
   936     029E  1783               	bsf	3,7	;select IRP bank2
   937     029F  0180               	clrf	0
   938     02A0                     l659:
   939     02A0  0008               	return
   940     02A1                     __end_of_sprintf:
   941                           
   942                           	psect	text2
   943     02C2                     __ptext2:	
   944 ;; *************** function _vfprintf *****************
   945 ;; Defined at:
   946 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
   947 ;; Parameters:    Size  Location     Type
   948 ;;  fp              1    wreg     PTR struct _IO_FILE
   949 ;;		 -> sprintf@f(11), 
   950 ;;  fmt             1    8[BANK0 ] PTR const unsigned char 
   951 ;;		 -> STR_1(9), 
   952 ;;  ap              1    9[BANK0 ] PTR PTR void 
   953 ;;		 -> sprintf@ap(1), 
   954 ;; Auto vars:     Size  Location     Type
   955 ;;  fp              1   10[BANK0 ] PTR struct _IO_FILE
   956 ;;		 -> sprintf@f(11), 
   957 ;;  cfmt            1   11[BANK0 ] PTR unsigned char 
   958 ;;		 -> STR_1(9), 
   959 ;; Return value:  Size  Location     Type
   960 ;;                  2    8[BANK0 ] int 
   961 ;; Registers used:
   962 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   963 ;; Tracked objects:
   964 ;;		On entry : 0/0
   965 ;;		On exit  : 0/0
   966 ;;		Unchanged: 0/0
   967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   968 ;;      Params:         0       2       0       0       0
   969 ;;      Locals:         0       2       0       0       0
   970 ;;      Temps:          0       0       0       0       0
   971 ;;      Totals:         0       4       0       0       0
   972 ;;Total ram usage:        4 bytes
   973 ;; Hardware stack levels used: 1
   974 ;; Hardware stack levels required when called: 3
   975 ;; This function calls:
   976 ;;		_vfpfcnvrt
   977 ;; This function is called by:
   978 ;;		_sprintf
   979 ;; This function uses a non-reentrant model
   980 ;;
   981                           
   982     02C2                     _vfprintf:	
   983                           ;psect for function _vfprintf
   984                           
   985                           
   986                           ;incstack = 0
   987                           ; Regs used in _vfprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   988                           ;vfprintf@fp stored from wreg
   989     02C2  1283               	bcf	3,5	;RP0=0, select bank0
   990     02C3  1303               	bcf	3,6	;RP1=0, select bank0
   991     02C4  00D1               	movwf	vfprintf@fp
   992     02C5                     l1440:
   993                           
   994                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
   995     02C5  084F               	movf	vfprintf@fmt,w
   996     02C6  00D2               	movwf	vfprintf@cfmt
   997                           
   998                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
   999     02C7  2AD2               	goto	l1444
  1000     02C8                     l1442:
  1001                           
  1002                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1003     02C8  3052               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  1004     02C9  00FA               	movwf	vfpfcnvrt@fmt
  1005     02CA  0850               	movf	vfprintf@ap,w
  1006     02CB  00FB               	movwf	vfpfcnvrt@ap
  1007     02CC  0851               	movf	vfprintf@fp,w
  1008     02CD  120A  118A  267E  120A  118A  	fcall	_vfpfcnvrt
  1009     02D2                     l1444:
  1010                           
  1011                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1012     02D2  1283               	bcf	3,5	;RP0=0, select bank0
  1013     02D3  1303               	bcf	3,6	;RP1=0, select bank0
  1014     02D4  0852               	movf	vfprintf@cfmt,w
  1015     02D5  0084               	movwf	4
  1016     02D6  120A  118A  2003  120A  118A  	fcall	stringdir
  1017     02DB  3A00               	xorlw	0
  1018     02DC  1D03               	skipz
  1019     02DD  2ADF               	goto	u1261
  1020     02DE  2AE0               	goto	u1260
  1021     02DF                     u1261:
  1022     02DF  2AC8               	goto	l1442
  1023     02E0                     u1260:
  1024     02E0                     l1446:
  1025                           
  1026                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1027     02E0  01CF               	clrf	?_vfprintf
  1028     02E1  01D0               	clrf	?_vfprintf+1
  1029     02E2                     l716:
  1030     02E2  0008               	return
  1031     02E3                     __end_of_vfprintf:
  1032                           
  1033                           	psect	text3
  1034     067E                     __ptext3:	
  1035 ;; *************** function _vfpfcnvrt *****************
  1036 ;; Defined at:
  1037 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  1038 ;; Parameters:    Size  Location     Type
  1039 ;;  fp              1    wreg     PTR struct _IO_FILE
  1040 ;;		 -> sprintf@f(11), 
  1041 ;;  fmt             1   10[COMMON] PTR PTR unsigned char 
  1042 ;;		 -> vfprintf@cfmt(1), 
  1043 ;;  ap              1   11[COMMON] PTR PTR void 
  1044 ;;		 -> sprintf@ap(1), 
  1045 ;; Auto vars:     Size  Location     Type
  1046 ;;  fp              1    1[BANK0 ] PTR struct _IO_FILE
  1047 ;;		 -> sprintf@f(11), 
  1048 ;;  convarg         4    3[BANK0 ] struct .
  1049 ;;  c               1    7[BANK0 ] unsigned char 
  1050 ;;  cp              1    2[BANK0 ] PTR unsigned char 
  1051 ;;		 -> STR_1(9), 
  1052 ;;  done            1    0[BANK0 ] _Bool 
  1053 ;; Return value:  Size  Location     Type
  1054 ;;                  1    wreg      void 
  1055 ;; Registers used:
  1056 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1057 ;; Tracked objects:
  1058 ;;		On entry : 0/0
  1059 ;;		On exit  : 0/0
  1060 ;;		Unchanged: 0/0
  1061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1062 ;;      Params:         2       0       0       0       0
  1063 ;;      Locals:         0       8       0       0       0
  1064 ;;      Temps:          2       0       0       0       0
  1065 ;;      Totals:         4       8       0       0       0
  1066 ;;Total ram usage:       12 bytes
  1067 ;; Hardware stack levels used: 1
  1068 ;; Hardware stack levels required when called: 2
  1069 ;; This function calls:
  1070 ;;		___awdiv
  1071 ;;		___awmod
  1072 ;;		___lwdiv
  1073 ;;		___lwmod
  1074 ;;		_abs
  1075 ;;		_fputc
  1076 ;; This function is called by:
  1077 ;;		_vfprintf
  1078 ;; This function uses a non-reentrant model
  1079 ;;
  1080                           
  1081     067E                     _vfpfcnvrt:	
  1082                           ;psect for function _vfpfcnvrt
  1083                           
  1084                           
  1085                           ;incstack = 0
  1086                           ; Regs used in _vfpfcnvrt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1087                           ;vfpfcnvrt@fp stored from wreg
  1088     067E  1283               	bcf	3,5	;RP0=0, select bank0
  1089     067F  1303               	bcf	3,6	;RP1=0, select bank0
  1090     0680  00C8               	movwf	vfpfcnvrt@fp
  1091     0681                     l1332:
  1092                           
  1093                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1094     0681  087A               	movf	vfpfcnvrt@fmt,w
  1095     0682  0084               	movwf	4
  1096     0683  1383               	bcf	3,7	;select IRP bank0
  1097     0684  0800               	movf	0,w
  1098     0685  0084               	movwf	4
  1099     0686  120A  118A  2003  120A  118A  	fcall	stringdir
  1100     068B  3A25               	xorlw	37
  1101     068C  1D03               	skipz
  1102     068D  2E8F               	goto	u1111
  1103     068E  2E90               	goto	u1110
  1104     068F                     u1111:
  1105     068F  2FD3               	goto	l1404
  1106     0690                     u1110:
  1107     0690                     l1334:
  1108                           
  1109                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1110     0690  3001               	movlw	1
  1111     0691  00FF               	movwf	btemp+1
  1112     0692  087A               	movf	vfpfcnvrt@fmt,w
  1113     0693  0084               	movwf	4
  1114     0694  087F               	movf	btemp+1,w
  1115     0695  0780               	addwf	0,f
  1116     0696                     l1336:
  1117                           
  1118                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1119     0696  01C0               	clrf	_width
  1120     0697  01C1               	clrf	_width+1
  1121     0698  1003               	clrc
  1122     0699  3000               	movlw	0
  1123     069A  1803               	btfsc	3,0
  1124     069B  3001               	movlw	1
  1125     069C  00C6               	movwf	_flags
  1126     069D                     l1338:
  1127                           
  1128                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1129     069D  30FF               	movlw	255
  1130     069E  00C2               	movwf	_prec
  1131     069F  30FF               	movlw	255
  1132     06A0  00C3               	movwf	_prec+1
  1133     06A1                     l1340:
  1134                           
  1135                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  1136     06A1  087A               	movf	vfpfcnvrt@fmt,w
  1137     06A2  0084               	movwf	4
  1138     06A3  0800               	movf	0,w
  1139     06A4  00C9               	movwf	vfpfcnvrt@cp
  1140     06A5                     l1342:
  1141                           
  1142                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1143     06A5  0849               	movf	vfpfcnvrt@cp,w
  1144     06A6  0084               	movwf	4
  1145     06A7  120A  118A  2003  120A  118A  	fcall	stringdir
  1146     06AC  3A64               	xorlw	100
  1147     06AD  1903               	skipnz
  1148     06AE  2EB0               	goto	u1121
  1149     06AF  2EB1               	goto	u1120
  1150     06B0                     u1121:
  1151     06B0  2EBD               	goto	l1346
  1152     06B1                     u1120:
  1153     06B1                     l1344:
  1154     06B1  0849               	movf	vfpfcnvrt@cp,w
  1155     06B2  0084               	movwf	4
  1156     06B3  120A  118A  2003  120A  118A  	fcall	stringdir
  1157     06B8  3A69               	xorlw	105
  1158     06B9  1D03               	skipz
  1159     06BA  2EBC               	goto	u1131
  1160     06BB  2EBD               	goto	u1130
  1161     06BC                     u1131:
  1162     06BC  2F49               	goto	l1374
  1163     06BD                     u1130:
  1164     06BD                     l1346:
  1165                           
  1166                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1167     06BD  087B               	movf	vfpfcnvrt@ap,w
  1168     06BE  0084               	movwf	4
  1169     06BF  0800               	movf	0,w
  1170     06C0  00FF               	movwf	btemp+1
  1171     06C1  3002               	movlw	2
  1172     06C2  0780               	addwf	0,f
  1173     06C3  087F               	movf	btemp+1,w
  1174     06C4  0084               	movwf	4
  1175     06C5  0800               	movf	0,w
  1176     06C6  00CA               	movwf	vfpfcnvrt@convarg
  1177     06C7  0A84               	incf	4,f
  1178     06C8  0800               	movf	0,w
  1179     06C9  00CB               	movwf	vfpfcnvrt@convarg+1
  1180     06CA                     l1348:
  1181                           
  1182                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1183     06CA  087A               	movf	vfpfcnvrt@fmt,w
  1184     06CB  0084               	movwf	4
  1185     06CC  0849               	movf	vfpfcnvrt@cp,w
  1186     06CD  3E01               	addlw	1
  1187     06CE  0080               	movwf	0
  1188     06CF                     l1350:
  1189                           
  1190                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  1191     06CF  3020               	movlw	32
  1192     06D0  00CE               	movwf	vfpfcnvrt@c
  1193     06D1                     l1352:
  1194                           
  1195                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  1196     06D1  1BCB               	btfsc	vfpfcnvrt@convarg+1,7
  1197     06D2  2ED4               	goto	u1141
  1198     06D3  2ED6               	goto	u1140
  1199     06D4                     u1141:
  1200     06D4  3001               	movlw	1
  1201     06D5  2ED7               	goto	u1150
  1202     06D6                     u1140:
  1203     06D6  3000               	movlw	0
  1204     06D7                     u1150:
  1205     06D7  00C7               	movwf	vfpfcnvrt@done
  1206     06D8                     l1354:
  1207                           
  1208                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  1209     06D8  3001               	movlw	1
  1210     06D9  02CE               	subwf	vfpfcnvrt@c,f
  1211     06DA  084E               	movf	vfpfcnvrt@c,w
  1212     06DB  3E20               	addlw	(low (_dbuf| 0))& (0+255)
  1213     06DC  0084               	movwf	4
  1214     06DD  300A               	movlw	10
  1215     06DE  00F0               	movwf	___awmod@divisor
  1216     06DF  3000               	movlw	0
  1217     06E0  00F1               	movwf	___awmod@divisor+1
  1218     06E1  084B               	movf	vfpfcnvrt@convarg+1,w
  1219     06E2  00F3               	movwf	___awmod@dividend+1
  1220     06E3  084A               	movf	vfpfcnvrt@convarg,w
  1221     06E4  00F2               	movwf	___awmod@dividend
  1222     06E5  120A  118A  2410  120A  118A  	fcall	___awmod
  1223     06EA  0871               	movf	?___awmod+1,w
  1224     06EB  00F7               	movwf	abs@a+1
  1225     06EC  0870               	movf	?___awmod,w
  1226     06ED  00F6               	movwf	abs@a
  1227     06EE  120A  118A  223D  120A  118A  	fcall	_abs
  1228     06F3  0876               	movf	?_abs,w
  1229     06F4  3E30               	addlw	48
  1230     06F5  1383               	bcf	3,7	;select IRP bank0
  1231     06F6  0080               	movwf	0
  1232     06F7                     l1356:
  1233                           
  1234                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  1235     06F7  300A               	movlw	10
  1236     06F8  00F0               	movwf	___awdiv@divisor
  1237     06F9  3000               	movlw	0
  1238     06FA  00F1               	movwf	___awdiv@divisor+1
  1239     06FB  1283               	bcf	3,5	;RP0=0, select bank0
  1240     06FC  1303               	bcf	3,6	;RP1=0, select bank0
  1241     06FD  084B               	movf	vfpfcnvrt@convarg+1,w
  1242     06FE  00F3               	movwf	___awdiv@dividend+1
  1243     06FF  084A               	movf	vfpfcnvrt@convarg,w
  1244     0700  00F2               	movwf	___awdiv@dividend
  1245     0701  120A  118A  24C7  120A  118A  	fcall	___awdiv
  1246     0706  0871               	movf	?___awdiv+1,w
  1247     0707  1283               	bcf	3,5	;RP0=0, select bank0
  1248     0708  1303               	bcf	3,6	;RP1=0, select bank0
  1249     0709  00CB               	movwf	vfpfcnvrt@convarg+1
  1250     070A  0870               	movf	?___awdiv,w
  1251     070B  00CA               	movwf	vfpfcnvrt@convarg
  1252     070C                     l1358:
  1253                           
  1254                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  1255     070C  084A               	movf	vfpfcnvrt@convarg,w
  1256     070D  044B               	iorwf	vfpfcnvrt@convarg+1,w
  1257     070E  1903               	btfsc	3,2
  1258     070F  2F11               	goto	u1161
  1259     0710  2F12               	goto	u1160
  1260     0711                     u1161:
  1261     0711  2F17               	goto	l1362
  1262     0712                     u1160:
  1263     0712                     l1360:
  1264     0712  084E               	movf	vfpfcnvrt@c,w
  1265     0713  1D03               	btfss	3,2
  1266     0714  2F16               	goto	u1171
  1267     0715  2F17               	goto	u1170
  1268     0716                     u1171:
  1269     0716  2ED8               	goto	l1354
  1270     0717                     u1170:
  1271     0717                     l1362:
  1272                           
  1273                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  1274     0717  084E               	movf	vfpfcnvrt@c,w
  1275     0718  1903               	btfsc	3,2
  1276     0719  2F1B               	goto	u1181
  1277     071A  2F1C               	goto	u1180
  1278     071B                     u1181:
  1279     071B  2F42               	goto	l1372
  1280     071C                     u1180:
  1281     071C                     l1364:
  1282     071C  0847               	movf	vfpfcnvrt@done,w
  1283     071D  1903               	btfsc	3,2
  1284     071E  2F20               	goto	u1191
  1285     071F  2F21               	goto	u1190
  1286     0720                     u1191:
  1287     0720  2F42               	goto	l1372
  1288     0721                     u1190:
  1289     0721                     l1366:
  1290                           
  1291                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  1292     0721  3001               	movlw	1
  1293     0722  02CE               	subwf	vfpfcnvrt@c,f
  1294     0723  084E               	movf	vfpfcnvrt@c,w
  1295     0724  3E20               	addlw	(low (_dbuf| 0))& (0+255)
  1296     0725  0084               	movwf	4
  1297     0726  302D               	movlw	45
  1298     0727  1383               	bcf	3,7	;select IRP bank0
  1299     0728  0080               	movwf	0
  1300     0729  2F42               	goto	l1372
  1301     072A                     l1368:
  1302                           
  1303                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  1304     072A  084E               	movf	vfpfcnvrt@c,w
  1305     072B  3E20               	addlw	(low (_dbuf| 0))& (0+255)
  1306     072C  0084               	movwf	4
  1307     072D  1383               	bcf	3,7	;select IRP bank0
  1308     072E  0800               	movf	0,w
  1309     072F  00FC               	movwf	??_vfpfcnvrt
  1310     0730  01FD               	clrf	??_vfpfcnvrt+1
  1311     0731  087C               	movf	??_vfpfcnvrt,w
  1312     0732  00F0               	movwf	fputc@c
  1313     0733  087D               	movf	??_vfpfcnvrt+1,w
  1314     0734  00F1               	movwf	fputc@c+1
  1315     0735  0848               	movf	vfpfcnvrt@fp,w
  1316     0736  00F2               	movwf	fputc@fp
  1317     0737  120A  118A  23B8  120A  118A  	fcall	_fputc
  1318     073C                     l1370:
  1319     073C  3001               	movlw	1
  1320     073D  00FF               	movwf	btemp+1
  1321     073E  087F               	movf	btemp+1,w
  1322     073F  1283               	bcf	3,5	;RP0=0, select bank0
  1323     0740  1303               	bcf	3,6	;RP1=0, select bank0
  1324     0741  07CE               	addwf	vfpfcnvrt@c,f
  1325     0742                     l1372:
  1326                           
  1327                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  1328     0742  3020               	movlw	32
  1329     0743  064E               	xorwf	vfpfcnvrt@c,w
  1330     0744  1D03               	btfss	3,2
  1331     0745  2F47               	goto	u1201
  1332     0746  2F48               	goto	u1200
  1333     0747                     u1201:
  1334     0747  2F2A               	goto	l1368
  1335     0748                     u1200:
  1336     0748  2FEA               	goto	l697
  1337     0749                     l1374:
  1338     0749  0849               	movf	vfpfcnvrt@cp,w
  1339     074A  0084               	movwf	4
  1340     074B  120A  118A  2003  120A  118A  	fcall	stringdir
  1341     0750  3A75               	xorlw	117
  1342     0751  1D03               	skipz
  1343     0752  2F54               	goto	u1211
  1344     0753  2F55               	goto	u1210
  1345     0754                     u1211:
  1346     0754  2FCB               	goto	l1400
  1347     0755                     u1210:
  1348     0755                     l1376:
  1349                           
  1350                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1452:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1495:    convarg.uint
      +                           = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned
      +                           int)0));
  1351     0755  087B               	movf	vfpfcnvrt@ap,w
  1352     0756  0084               	movwf	4
  1353     0757  0800               	movf	0,w
  1354     0758  00FF               	movwf	btemp+1
  1355     0759  3002               	movlw	2
  1356     075A  0780               	addwf	0,f
  1357     075B  087F               	movf	btemp+1,w
  1358     075C  0084               	movwf	4
  1359     075D  0800               	movf	0,w
  1360     075E  00CA               	movwf	vfpfcnvrt@convarg
  1361     075F  0A84               	incf	4,f
  1362     0760  0800               	movf	0,w
  1363     0761  00CB               	movwf	vfpfcnvrt@convarg+1
  1364     0762                     l1378:
  1365                           
  1366                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
  1367     0762  087A               	movf	vfpfcnvrt@fmt,w
  1368     0763  0084               	movwf	4
  1369     0764  0849               	movf	vfpfcnvrt@cp,w
  1370     0765  3E01               	addlw	1
  1371     0766  0080               	movwf	0
  1372                           
  1373                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
  1374     0767  2FC0               	goto	l1398
  1375     0768                     l1380:
  1376                           
  1377                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1525:      c = si
      +                          zeof(dbuf);
  1378     0768  3020               	movlw	32
  1379     0769  00CE               	movwf	vfpfcnvrt@c
  1380     076A                     l1382:
  1381                           
  1382                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1527:       dbuf[
      +                          --c] = (convarg.uint % 10) + '0';
  1383     076A  3001               	movlw	1
  1384     076B  02CE               	subwf	vfpfcnvrt@c,f
  1385     076C  084E               	movf	vfpfcnvrt@c,w
  1386     076D  3E20               	addlw	(low (_dbuf| 0))& (0+255)
  1387     076E  0084               	movwf	4
  1388     076F  300A               	movlw	10
  1389     0770  00F0               	movwf	___lwmod@divisor
  1390     0771  3000               	movlw	0
  1391     0772  00F1               	movwf	___lwmod@divisor+1
  1392     0773  084B               	movf	vfpfcnvrt@convarg+1,w
  1393     0774  00F3               	movwf	___lwmod@dividend+1
  1394     0775  084A               	movf	vfpfcnvrt@convarg,w
  1395     0776  00F2               	movwf	___lwmod@dividend
  1396     0777  120A  118A  233A  120A  118A  	fcall	___lwmod
  1397     077C  0870               	movf	?___lwmod,w
  1398     077D  3E30               	addlw	48
  1399     077E  1383               	bcf	3,7	;select IRP bank0
  1400     077F  0080               	movwf	0
  1401     0780                     l1384:
  1402                           
  1403                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1528:       conva
      +                          rg.uint /= 10;
  1404     0780  300A               	movlw	10
  1405     0781  00F0               	movwf	___lwdiv@divisor
  1406     0782  3000               	movlw	0
  1407     0783  00F1               	movwf	___lwdiv@divisor+1
  1408     0784  1283               	bcf	3,5	;RP0=0, select bank0
  1409     0785  1303               	bcf	3,6	;RP1=0, select bank0
  1410     0786  084B               	movf	vfpfcnvrt@convarg+1,w
  1411     0787  00F3               	movwf	___lwdiv@dividend+1
  1412     0788  084A               	movf	vfpfcnvrt@convarg,w
  1413     0789  00F2               	movwf	___lwdiv@dividend
  1414     078A  120A  118A  2374  120A  118A  	fcall	___lwdiv
  1415     078F  0871               	movf	?___lwdiv+1,w
  1416     0790  1283               	bcf	3,5	;RP0=0, select bank0
  1417     0791  1303               	bcf	3,6	;RP1=0, select bank0
  1418     0792  00CB               	movwf	vfpfcnvrt@convarg+1
  1419     0793  0870               	movf	?___lwdiv,w
  1420     0794  00CA               	movwf	vfpfcnvrt@convarg
  1421     0795                     l1386:
  1422                           
  1423                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1532:      } whil
      +                          e (convarg.uint != 0 && c != 0);
  1424     0795  084A               	movf	vfpfcnvrt@convarg,w
  1425     0796  044B               	iorwf	vfpfcnvrt@convarg+1,w
  1426     0797  1903               	btfsc	3,2
  1427     0798  2F9A               	goto	u1221
  1428     0799  2F9B               	goto	u1220
  1429     079A                     u1221:
  1430     079A  2FB9               	goto	l1394
  1431     079B                     u1220:
  1432     079B                     l1388:
  1433     079B  084E               	movf	vfpfcnvrt@c,w
  1434     079C  1D03               	btfss	3,2
  1435     079D  2F9F               	goto	u1231
  1436     079E  2FA0               	goto	u1230
  1437     079F                     u1231:
  1438     079F  2F6A               	goto	l1382
  1439     07A0                     u1230:
  1440     07A0  2FB9               	goto	l1394
  1441     07A1                     l1390:
  1442                           
  1443                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1534:       fputc
      +                          (dbuf[c++], fp);
  1444     07A1  084E               	movf	vfpfcnvrt@c,w
  1445     07A2  3E20               	addlw	(low (_dbuf| 0))& (0+255)
  1446     07A3  0084               	movwf	4
  1447     07A4  1383               	bcf	3,7	;select IRP bank0
  1448     07A5  0800               	movf	0,w
  1449     07A6  00FC               	movwf	??_vfpfcnvrt
  1450     07A7  01FD               	clrf	??_vfpfcnvrt+1
  1451     07A8  087C               	movf	??_vfpfcnvrt,w
  1452     07A9  00F0               	movwf	fputc@c
  1453     07AA  087D               	movf	??_vfpfcnvrt+1,w
  1454     07AB  00F1               	movwf	fputc@c+1
  1455     07AC  0848               	movf	vfpfcnvrt@fp,w
  1456     07AD  00F2               	movwf	fputc@fp
  1457     07AE  120A  118A  23B8  120A  118A  	fcall	_fputc
  1458     07B3                     l1392:
  1459     07B3  3001               	movlw	1
  1460     07B4  00FF               	movwf	btemp+1
  1461     07B5  087F               	movf	btemp+1,w
  1462     07B6  1283               	bcf	3,5	;RP0=0, select bank0
  1463     07B7  1303               	bcf	3,6	;RP1=0, select bank0
  1464     07B8  07CE               	addwf	vfpfcnvrt@c,f
  1465     07B9                     l1394:
  1466                           
  1467                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1533:      while 
      +                          (c != sizeof(dbuf)) {
  1468     07B9  3020               	movlw	32
  1469     07BA  064E               	xorwf	vfpfcnvrt@c,w
  1470     07BB  1D03               	btfss	3,2
  1471     07BC  2FBE               	goto	u1241
  1472     07BD  2FBF               	goto	u1240
  1473     07BE                     u1241:
  1474     07BE  2FA1               	goto	l1390
  1475     07BF                     u1240:
  1476     07BF  2FEA               	goto	l697
  1477     07C0                     l1398:
  1478     07C0  0849               	movf	vfpfcnvrt@cp,w
  1479     07C1  0084               	movwf	4
  1480     07C2  120A  118A  2003  120A  118A  	fcall	stringdir
  1481                           
  1482                           ; Switch size 1, requested type "simple"
  1483                           ; Number of cases is 1, Range of values is 117 to 117
  1484                           ; switch strategies available:
  1485                           ; Name         Instructions Cycles
  1486                           ; simple_byte            4     3 (average)
  1487                           ; direct_byte           14    11 (fixed)
  1488                           ; jumptable            263     9 (fixed)
  1489                           ;	Chosen strategy is simple_byte
  1490     07C7  3A75               	xorlw	117	; case 117
  1491     07C8  1903               	skipnz
  1492     07C9  2F68               	goto	l1380
  1493     07CA  2FCB               	goto	l1400
  1494     07CB                     l1400:
  1495                           
  1496                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1497     07CB  3001               	movlw	1
  1498     07CC  00FF               	movwf	btemp+1
  1499     07CD  087A               	movf	vfpfcnvrt@fmt,w
  1500     07CE  0084               	movwf	4
  1501     07CF  087F               	movf	btemp+1,w
  1502     07D0  1383               	bcf	3,7	;select IRP bank0
  1503     07D1  0780               	addwf	0,f
  1504     07D2  2FEA               	goto	l697
  1505     07D3                     l1404:
  1506                           
  1507                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1508     07D3  087A               	movf	vfpfcnvrt@fmt,w
  1509     07D4  0084               	movwf	4
  1510     07D5  0800               	movf	0,w
  1511     07D6  0084               	movwf	4
  1512     07D7  120A  118A  2003  120A  118A  	fcall	stringdir
  1513     07DC  00FC               	movwf	??_vfpfcnvrt
  1514     07DD  01FD               	clrf	??_vfpfcnvrt+1
  1515     07DE  087C               	movf	??_vfpfcnvrt,w
  1516     07DF  00F0               	movwf	fputc@c
  1517     07E0  087D               	movf	??_vfpfcnvrt+1,w
  1518     07E1  00F1               	movwf	fputc@c+1
  1519     07E2  0848               	movf	vfpfcnvrt@fp,w
  1520     07E3  00F2               	movwf	fputc@fp
  1521     07E4  120A  118A  23B8  120A  118A  	fcall	_fputc
  1522     07E9  2FCB               	goto	l1400
  1523     07EA                     l697:
  1524     07EA  0008               	return
  1525     07EB                     __end_of_vfpfcnvrt:
  1526                           
  1527                           	psect	text4
  1528     03B8                     __ptext4:	
  1529 ;; *************** function _fputc *****************
  1530 ;; Defined at:
  1531 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  1532 ;; Parameters:    Size  Location     Type
  1533 ;;  c               2    0[COMMON] int 
  1534 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
  1535 ;;		 -> sprintf@f(11), 
  1536 ;; Auto vars:     Size  Location     Type
  1537 ;;		None
  1538 ;; Return value:  Size  Location     Type
  1539 ;;                  2    0[COMMON] int 
  1540 ;; Registers used:
  1541 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1542 ;; Tracked objects:
  1543 ;;		On entry : 0/0
  1544 ;;		On exit  : 0/0
  1545 ;;		Unchanged: 0/0
  1546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1547 ;;      Params:         3       0       0       0       0
  1548 ;;      Locals:         0       0       0       0       0
  1549 ;;      Temps:          5       0       0       0       0
  1550 ;;      Totals:         8       0       0       0       0
  1551 ;;Total ram usage:        8 bytes
  1552 ;; Hardware stack levels used: 1
  1553 ;; Hardware stack levels required when called: 1
  1554 ;; This function calls:
  1555 ;;		_putch
  1556 ;; This function is called by:
  1557 ;;		_vfpfcnvrt
  1558 ;; This function uses a non-reentrant model
  1559 ;;
  1560                           
  1561     03B8                     _fputc:	
  1562                           ;psect for function _fputc
  1563                           
  1564     03B8                     l1300:	
  1565                           ;incstack = 0
  1566                           ; Regs used in _fputc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1567                           
  1568     03B8  0872               	movf	fputc@fp,w
  1569     03B9  1903               	btfsc	3,2
  1570     03BA  2BBC               	goto	u1021
  1571     03BB  2BBD               	goto	u1020
  1572     03BC                     u1021:
  1573     03BC  2BC2               	goto	l1304
  1574     03BD                     u1020:
  1575     03BD                     l1302:
  1576     03BD  0872               	movf	fputc@fp,w
  1577     03BE  1D03               	btfss	3,2
  1578     03BF  2BC1               	goto	u1031
  1579     03C0  2BC2               	goto	u1030
  1580     03C1                     u1031:
  1581     03C1  2BC9               	goto	l1306
  1582     03C2                     u1030:
  1583     03C2                     l1304:
  1584     03C2  0870               	movf	fputc@c,w
  1585     03C3  120A  118A  221B  120A  118A  	fcall	_putch
  1586     03C8  2C0F               	goto	l735
  1587     03C9                     l1306:
  1588     03C9  0872               	movf	fputc@fp,w
  1589     03CA  3E09               	addlw	9
  1590     03CB  0084               	movwf	4
  1591     03CC  1383               	bcf	3,7	;select IRP bank0
  1592     03CD  0800               	movf	0,w
  1593     03CE  00F3               	movwf	??_fputc
  1594     03CF  0A84               	incf	4,f
  1595     03D0  0800               	movf	0,w
  1596     03D1  00F4               	movwf	??_fputc+1
  1597     03D2  0873               	movf	??_fputc,w
  1598     03D3  0474               	iorwf	??_fputc+1,w
  1599     03D4  1903               	btfsc	3,2
  1600     03D5  2BD7               	goto	u1041
  1601     03D6  2BD8               	goto	u1040
  1602     03D7                     u1041:
  1603     03D7  2BF6               	goto	l1310
  1604     03D8                     u1040:
  1605     03D8                     l1308:
  1606     03D8  0872               	movf	fputc@fp,w
  1607     03D9  3E09               	addlw	9
  1608     03DA  0084               	movwf	4
  1609     03DB  0800               	movf	0,w
  1610     03DC  00F3               	movwf	??_fputc
  1611     03DD  0A84               	incf	4,f
  1612     03DE  0800               	movf	0,w
  1613     03DF  00F4               	movwf	??_fputc+1
  1614     03E0  0872               	movf	fputc@fp,w
  1615     03E1  3E02               	addlw	2
  1616     03E2  0084               	movwf	4
  1617     03E3  0800               	movf	0,w
  1618     03E4  00F5               	movwf	??_fputc+2
  1619     03E5  0A84               	incf	4,f
  1620     03E6  0800               	movf	0,w
  1621     03E7  00F6               	movwf	??_fputc+3
  1622     03E8  0876               	movf	??_fputc+3,w
  1623     03E9  3A80               	xorlw	128
  1624     03EA  00F7               	movwf	??_fputc+4
  1625     03EB  0874               	movf	??_fputc+1,w
  1626     03EC  3A80               	xorlw	128
  1627     03ED  0277               	subwf	??_fputc+4,w
  1628     03EE  1D03               	skipz
  1629     03EF  2BF2               	goto	u1055
  1630     03F0  0873               	movf	??_fputc,w
  1631     03F1  0275               	subwf	??_fputc+2,w
  1632     03F2                     u1055:
  1633     03F2  1803               	skipnc
  1634     03F3  2BF5               	goto	u1051
  1635     03F4  2BF6               	goto	u1050
  1636     03F5                     u1051:
  1637     03F5  2C0F               	goto	l735
  1638     03F6                     u1050:
  1639     03F6                     l1310:
  1640     03F6  0872               	movf	fputc@fp,w
  1641     03F7  3E02               	addlw	2
  1642     03F8  0084               	movwf	4
  1643     03F9  1383               	bcf	3,7	;select IRP bank0
  1644     03FA  0800               	movf	0,w
  1645     03FB  00F3               	movwf	??_fputc
  1646     03FC  0872               	movf	fputc@fp,w
  1647     03FD  0084               	movwf	4
  1648     03FE  0800               	movf	0,w
  1649     03FF  0773               	addwf	??_fputc,w
  1650     0400  00F4               	movwf	??_fputc+1
  1651     0401  0874               	movf	??_fputc+1,w
  1652     0402  0084               	movwf	4
  1653     0403  0870               	movf	fputc@c,w
  1654     0404  1783               	bsf	3,7	;select IRP bank2
  1655     0405  0080               	movwf	0
  1656     0406  0872               	movf	fputc@fp,w
  1657     0407  3E02               	addlw	2
  1658     0408  0084               	movwf	4
  1659     0409  3001               	movlw	1
  1660     040A  1383               	bcf	3,7	;select IRP bank0
  1661     040B  0780               	addwf	0,f
  1662     040C  0A84               	incf	4,f
  1663     040D  1803               	skipnc
  1664     040E  0A80               	incf	0,f
  1665     040F                     l735:
  1666     040F  0008               	return
  1667     0410                     __end_of_fputc:
  1668                           
  1669                           	psect	text5
  1670     021B                     __ptext5:	
  1671 ;; *************** function _putch *****************
  1672 ;; Defined at:
  1673 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\putch.c"
  1674 ;; Parameters:    Size  Location     Type
  1675 ;;  c               1    wreg     unsigned char 
  1676 ;; Auto vars:     Size  Location     Type
  1677 ;;  c               1    0[COMMON] unsigned char 
  1678 ;; Return value:  Size  Location     Type
  1679 ;;                  1    wreg      void 
  1680 ;; Registers used:
  1681 ;;		wreg
  1682 ;; Tracked objects:
  1683 ;;		On entry : 0/0
  1684 ;;		On exit  : 0/0
  1685 ;;		Unchanged: 0/0
  1686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1687 ;;      Params:         0       0       0       0       0
  1688 ;;      Locals:         0       0       0       0       0
  1689 ;;      Temps:          0       0       0       0       0
  1690 ;;      Totals:         0       0       0       0       0
  1691 ;;Total ram usage:        0 bytes
  1692 ;; Hardware stack levels used: 1
  1693 ;; This function calls:
  1694 ;;		Nothing
  1695 ;; This function is called by:
  1696 ;;		_fputc
  1697 ;; This function uses a non-reentrant model
  1698 ;;
  1699                           
  1700     021B                     _putch:	
  1701                           ;psect for function _putch
  1702                           
  1703     021B                     l746:	
  1704                           ;incstack = 0
  1705                           ; Regs used in _putch: [wreg]
  1706                           
  1707     021B  0008               	return
  1708     021C                     __end_of_putch:
  1709                           
  1710                           	psect	text6
  1711     023D                     __ptext6:	
  1712 ;; *************** function _abs *****************
  1713 ;; Defined at:
  1714 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\abs.c"
  1715 ;; Parameters:    Size  Location     Type
  1716 ;;  a               2    6[COMMON] int 
  1717 ;; Auto vars:     Size  Location     Type
  1718 ;;		None
  1719 ;; Return value:  Size  Location     Type
  1720 ;;                  2    6[COMMON] int 
  1721 ;; Registers used:
  1722 ;;		wreg, status,2, status,0
  1723 ;; Tracked objects:
  1724 ;;		On entry : 0/0
  1725 ;;		On exit  : 0/0
  1726 ;;		Unchanged: 0/0
  1727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1728 ;;      Params:         2       0       0       0       0
  1729 ;;      Locals:         0       0       0       0       0
  1730 ;;      Temps:          2       0       0       0       0
  1731 ;;      Totals:         4       0       0       0       0
  1732 ;;Total ram usage:        4 bytes
  1733 ;; Hardware stack levels used: 1
  1734 ;; This function calls:
  1735 ;;		Nothing
  1736 ;; This function is called by:
  1737 ;;		_vfpfcnvrt
  1738 ;; This function uses a non-reentrant model
  1739 ;;
  1740                           
  1741     023D                     _abs:	
  1742                           ;psect for function _abs
  1743                           
  1744     023D                     l1314:	
  1745                           ;incstack = 0
  1746                           ; Regs used in _abs: [wreg+status,2+status,0]
  1747                           
  1748     023D  1BF7               	btfsc	abs@a+1,7
  1749     023E  2A40               	goto	u1061
  1750     023F  2A41               	goto	u1060
  1751     0240                     u1061:
  1752     0240  2A42               	goto	l1318
  1753     0241                     u1060:
  1754     0241                     l1316:
  1755     0241  2A4D               	goto	l723
  1756     0242                     l1318:
  1757     0242  0976               	comf	abs@a,w
  1758     0243  00F8               	movwf	??_abs
  1759     0244  0977               	comf	abs@a+1,w
  1760     0245  00F9               	movwf	??_abs+1
  1761     0246  0AF8               	incf	??_abs,f
  1762     0247  1903               	skipnz
  1763     0248  0AF9               	incf	??_abs+1,f
  1764     0249  0878               	movf	??_abs,w
  1765     024A  00F6               	movwf	?_abs
  1766     024B  0879               	movf	??_abs+1,w
  1767     024C  00F7               	movwf	?_abs+1
  1768     024D                     l723:
  1769     024D  0008               	return
  1770     024E                     __end_of_abs:
  1771                           
  1772                           	psect	text7
  1773     033A                     __ptext7:	
  1774 ;; *************** function ___lwmod *****************
  1775 ;; Defined at:
  1776 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwmod.c"
  1777 ;; Parameters:    Size  Location     Type
  1778 ;;  divisor         2    0[COMMON] unsigned int 
  1779 ;;  dividend        2    2[COMMON] unsigned int 
  1780 ;; Auto vars:     Size  Location     Type
  1781 ;;  counter         1    4[COMMON] unsigned char 
  1782 ;; Return value:  Size  Location     Type
  1783 ;;                  2    0[COMMON] unsigned int 
  1784 ;; Registers used:
  1785 ;;		wreg, status,2, status,0, btemp+1
  1786 ;; Tracked objects:
  1787 ;;		On entry : 0/0
  1788 ;;		On exit  : 0/0
  1789 ;;		Unchanged: 0/0
  1790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1791 ;;      Params:         4       0       0       0       0
  1792 ;;      Locals:         1       0       0       0       0
  1793 ;;      Temps:          0       0       0       0       0
  1794 ;;      Totals:         5       0       0       0       0
  1795 ;;Total ram usage:        5 bytes
  1796 ;; Hardware stack levels used: 1
  1797 ;; This function calls:
  1798 ;;		Nothing
  1799 ;; This function is called by:
  1800 ;;		_vfpfcnvrt
  1801 ;; This function uses a non-reentrant model
  1802 ;;
  1803                           
  1804     033A                     ___lwmod:	
  1805                           ;psect for function ___lwmod
  1806                           
  1807     033A                     l1278:	
  1808                           ;incstack = 0
  1809                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  1810                           
  1811     033A  0870               	movf	___lwmod@divisor,w
  1812     033B  0471               	iorwf	___lwmod@divisor+1,w
  1813     033C  1903               	btfsc	3,2
  1814     033D  2B3F               	goto	u961
  1815     033E  2B40               	goto	u960
  1816     033F                     u961:
  1817     033F  2B6F               	goto	l1296
  1818     0340                     u960:
  1819     0340                     l1280:
  1820     0340  01F4               	clrf	___lwmod@counter
  1821     0341  0AF4               	incf	___lwmod@counter,f
  1822     0342  2B4E               	goto	l1286
  1823     0343                     l1282:
  1824     0343  3001               	movlw	1
  1825     0344                     u975:
  1826     0344  1003               	clrc
  1827     0345  0DF0               	rlf	___lwmod@divisor,f
  1828     0346  0DF1               	rlf	___lwmod@divisor+1,f
  1829     0347  3EFF               	addlw	-1
  1830     0348  1D03               	skipz
  1831     0349  2B44               	goto	u975
  1832     034A                     l1284:
  1833     034A  3001               	movlw	1
  1834     034B  00FF               	movwf	btemp+1
  1835     034C  087F               	movf	btemp+1,w
  1836     034D  07F4               	addwf	___lwmod@counter,f
  1837     034E                     l1286:
  1838     034E  1FF1               	btfss	___lwmod@divisor+1,7
  1839     034F  2B51               	goto	u981
  1840     0350  2B52               	goto	u980
  1841     0351                     u981:
  1842     0351  2B43               	goto	l1282
  1843     0352                     u980:
  1844     0352                     l1288:
  1845     0352  0871               	movf	___lwmod@divisor+1,w
  1846     0353  0273               	subwf	___lwmod@dividend+1,w
  1847     0354  1D03               	skipz
  1848     0355  2B58               	goto	u995
  1849     0356  0870               	movf	___lwmod@divisor,w
  1850     0357  0272               	subwf	___lwmod@dividend,w
  1851     0358                     u995:
  1852     0358  1C03               	skipc
  1853     0359  2B5B               	goto	u991
  1854     035A  2B5C               	goto	u990
  1855     035B                     u991:
  1856     035B  2B62               	goto	l1292
  1857     035C                     u990:
  1858     035C                     l1290:
  1859     035C  0870               	movf	___lwmod@divisor,w
  1860     035D  02F2               	subwf	___lwmod@dividend,f
  1861     035E  0871               	movf	___lwmod@divisor+1,w
  1862     035F  1C03               	skipc
  1863     0360  03F3               	decf	___lwmod@dividend+1,f
  1864     0361  02F3               	subwf	___lwmod@dividend+1,f
  1865     0362                     l1292:
  1866     0362  3001               	movlw	1
  1867     0363                     u1005:
  1868     0363  1003               	clrc
  1869     0364  0CF1               	rrf	___lwmod@divisor+1,f
  1870     0365  0CF0               	rrf	___lwmod@divisor,f
  1871     0366  3EFF               	addlw	-1
  1872     0367  1D03               	skipz
  1873     0368  2B63               	goto	u1005
  1874     0369                     l1294:
  1875     0369  3001               	movlw	1
  1876     036A  02F4               	subwf	___lwmod@counter,f
  1877     036B  1D03               	btfss	3,2
  1878     036C  2B6E               	goto	u1011
  1879     036D  2B6F               	goto	u1010
  1880     036E                     u1011:
  1881     036E  2B52               	goto	l1288
  1882     036F                     u1010:
  1883     036F                     l1296:
  1884     036F  0873               	movf	___lwmod@dividend+1,w
  1885     0370  00F1               	movwf	?___lwmod+1
  1886     0371  0872               	movf	___lwmod@dividend,w
  1887     0372  00F0               	movwf	?___lwmod
  1888     0373                     l486:
  1889     0373  0008               	return
  1890     0374                     __end_of___lwmod:
  1891                           
  1892                           	psect	text8
  1893     0374                     __ptext8:	
  1894 ;; *************** function ___lwdiv *****************
  1895 ;; Defined at:
  1896 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwdiv.c"
  1897 ;; Parameters:    Size  Location     Type
  1898 ;;  divisor         2    0[COMMON] unsigned int 
  1899 ;;  dividend        2    2[COMMON] unsigned int 
  1900 ;; Auto vars:     Size  Location     Type
  1901 ;;  quotient        2    4[COMMON] unsigned int 
  1902 ;;  counter         1    6[COMMON] unsigned char 
  1903 ;; Return value:  Size  Location     Type
  1904 ;;                  2    0[COMMON] unsigned int 
  1905 ;; Registers used:
  1906 ;;		wreg, status,2, status,0, btemp+1
  1907 ;; Tracked objects:
  1908 ;;		On entry : 0/0
  1909 ;;		On exit  : 0/0
  1910 ;;		Unchanged: 0/0
  1911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1912 ;;      Params:         4       0       0       0       0
  1913 ;;      Locals:         3       0       0       0       0
  1914 ;;      Temps:          0       0       0       0       0
  1915 ;;      Totals:         7       0       0       0       0
  1916 ;;Total ram usage:        7 bytes
  1917 ;; Hardware stack levels used: 1
  1918 ;; This function calls:
  1919 ;;		Nothing
  1920 ;; This function is called by:
  1921 ;;		_vfpfcnvrt
  1922 ;; This function uses a non-reentrant model
  1923 ;;
  1924                           
  1925     0374                     ___lwdiv:	
  1926                           ;psect for function ___lwdiv
  1927                           
  1928     0374                     l1252:	
  1929                           ;incstack = 0
  1930                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  1931                           
  1932     0374  01F4               	clrf	___lwdiv@quotient
  1933     0375  01F5               	clrf	___lwdiv@quotient+1
  1934     0376                     l1254:
  1935     0376  0870               	movf	___lwdiv@divisor,w
  1936     0377  0471               	iorwf	___lwdiv@divisor+1,w
  1937     0378  1903               	btfsc	3,2
  1938     0379  2B7B               	goto	u891
  1939     037A  2B7C               	goto	u890
  1940     037B                     u891:
  1941     037B  2BB3               	goto	l1274
  1942     037C                     u890:
  1943     037C                     l1256:
  1944     037C  01F6               	clrf	___lwdiv@counter
  1945     037D  0AF6               	incf	___lwdiv@counter,f
  1946     037E  2B8A               	goto	l1262
  1947     037F                     l1258:
  1948     037F  3001               	movlw	1
  1949     0380                     u905:
  1950     0380  1003               	clrc
  1951     0381  0DF0               	rlf	___lwdiv@divisor,f
  1952     0382  0DF1               	rlf	___lwdiv@divisor+1,f
  1953     0383  3EFF               	addlw	-1
  1954     0384  1D03               	skipz
  1955     0385  2B80               	goto	u905
  1956     0386                     l1260:
  1957     0386  3001               	movlw	1
  1958     0387  00FF               	movwf	btemp+1
  1959     0388  087F               	movf	btemp+1,w
  1960     0389  07F6               	addwf	___lwdiv@counter,f
  1961     038A                     l1262:
  1962     038A  1FF1               	btfss	___lwdiv@divisor+1,7
  1963     038B  2B8D               	goto	u911
  1964     038C  2B8E               	goto	u910
  1965     038D                     u911:
  1966     038D  2B7F               	goto	l1258
  1967     038E                     u910:
  1968     038E                     l1264:
  1969     038E  3001               	movlw	1
  1970     038F                     u925:
  1971     038F  1003               	clrc
  1972     0390  0DF4               	rlf	___lwdiv@quotient,f
  1973     0391  0DF5               	rlf	___lwdiv@quotient+1,f
  1974     0392  3EFF               	addlw	-1
  1975     0393  1D03               	skipz
  1976     0394  2B8F               	goto	u925
  1977     0395  0871               	movf	___lwdiv@divisor+1,w
  1978     0396  0273               	subwf	___lwdiv@dividend+1,w
  1979     0397  1D03               	skipz
  1980     0398  2B9B               	goto	u935
  1981     0399  0870               	movf	___lwdiv@divisor,w
  1982     039A  0272               	subwf	___lwdiv@dividend,w
  1983     039B                     u935:
  1984     039B  1C03               	skipc
  1985     039C  2B9E               	goto	u931
  1986     039D  2B9F               	goto	u930
  1987     039E                     u931:
  1988     039E  2BA6               	goto	l1270
  1989     039F                     u930:
  1990     039F                     l1266:
  1991     039F  0870               	movf	___lwdiv@divisor,w
  1992     03A0  02F2               	subwf	___lwdiv@dividend,f
  1993     03A1  0871               	movf	___lwdiv@divisor+1,w
  1994     03A2  1C03               	skipc
  1995     03A3  03F3               	decf	___lwdiv@dividend+1,f
  1996     03A4  02F3               	subwf	___lwdiv@dividend+1,f
  1997     03A5                     l1268:
  1998     03A5  1474               	bsf	___lwdiv@quotient,0
  1999     03A6                     l1270:
  2000     03A6  3001               	movlw	1
  2001     03A7                     u945:
  2002     03A7  1003               	clrc
  2003     03A8  0CF1               	rrf	___lwdiv@divisor+1,f
  2004     03A9  0CF0               	rrf	___lwdiv@divisor,f
  2005     03AA  3EFF               	addlw	-1
  2006     03AB  1D03               	skipz
  2007     03AC  2BA7               	goto	u945
  2008     03AD                     l1272:
  2009     03AD  3001               	movlw	1
  2010     03AE  02F6               	subwf	___lwdiv@counter,f
  2011     03AF  1D03               	btfss	3,2
  2012     03B0  2BB2               	goto	u951
  2013     03B1  2BB3               	goto	u950
  2014     03B2                     u951:
  2015     03B2  2B8E               	goto	l1264
  2016     03B3                     u950:
  2017     03B3                     l1274:
  2018     03B3  0875               	movf	___lwdiv@quotient+1,w
  2019     03B4  00F1               	movwf	?___lwdiv+1
  2020     03B5  0874               	movf	___lwdiv@quotient,w
  2021     03B6  00F0               	movwf	?___lwdiv
  2022     03B7                     l476:
  2023     03B7  0008               	return
  2024     03B8                     __end_of___lwdiv:
  2025                           
  2026                           	psect	text9
  2027     0410                     __ptext9:	
  2028 ;; *************** function ___awmod *****************
  2029 ;; Defined at:
  2030 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  2031 ;; Parameters:    Size  Location     Type
  2032 ;;  divisor         2    0[COMMON] int 
  2033 ;;  dividend        2    2[COMMON] int 
  2034 ;; Auto vars:     Size  Location     Type
  2035 ;;  sign            1    5[COMMON] unsigned char 
  2036 ;;  counter         1    4[COMMON] unsigned char 
  2037 ;; Return value:  Size  Location     Type
  2038 ;;                  2    0[COMMON] int 
  2039 ;; Registers used:
  2040 ;;		wreg, status,2, status,0, btemp+1
  2041 ;; Tracked objects:
  2042 ;;		On entry : 0/0
  2043 ;;		On exit  : 0/0
  2044 ;;		Unchanged: 0/0
  2045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2046 ;;      Params:         4       0       0       0       0
  2047 ;;      Locals:         2       0       0       0       0
  2048 ;;      Temps:          0       0       0       0       0
  2049 ;;      Totals:         6       0       0       0       0
  2050 ;;Total ram usage:        6 bytes
  2051 ;; Hardware stack levels used: 1
  2052 ;; This function calls:
  2053 ;;		Nothing
  2054 ;; This function is called by:
  2055 ;;		_vfpfcnvrt
  2056 ;; This function uses a non-reentrant model
  2057 ;;
  2058                           
  2059     0410                     ___awmod:	
  2060                           ;psect for function ___awmod
  2061                           
  2062     0410                     l1214:	
  2063                           ;incstack = 0
  2064                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  2065                           
  2066     0410  01F5               	clrf	___awmod@sign
  2067     0411                     l1216:
  2068     0411  1FF3               	btfss	___awmod@dividend+1,7
  2069     0412  2C14               	goto	u801
  2070     0413  2C15               	goto	u800
  2071     0414                     u801:
  2072     0414  2C1C               	goto	l1222
  2073     0415                     u800:
  2074     0415                     l1218:
  2075     0415  09F2               	comf	___awmod@dividend,f
  2076     0416  09F3               	comf	___awmod@dividend+1,f
  2077     0417  0AF2               	incf	___awmod@dividend,f
  2078     0418  1903               	skipnz
  2079     0419  0AF3               	incf	___awmod@dividend+1,f
  2080     041A                     l1220:
  2081     041A  01F5               	clrf	___awmod@sign
  2082     041B  0AF5               	incf	___awmod@sign,f
  2083     041C                     l1222:
  2084     041C  1FF1               	btfss	___awmod@divisor+1,7
  2085     041D  2C1F               	goto	u811
  2086     041E  2C20               	goto	u810
  2087     041F                     u811:
  2088     041F  2C25               	goto	l1226
  2089     0420                     u810:
  2090     0420                     l1224:
  2091     0420  09F0               	comf	___awmod@divisor,f
  2092     0421  09F1               	comf	___awmod@divisor+1,f
  2093     0422  0AF0               	incf	___awmod@divisor,f
  2094     0423  1903               	skipnz
  2095     0424  0AF1               	incf	___awmod@divisor+1,f
  2096     0425                     l1226:
  2097     0425  0870               	movf	___awmod@divisor,w
  2098     0426  0471               	iorwf	___awmod@divisor+1,w
  2099     0427  1903               	btfsc	3,2
  2100     0428  2C2A               	goto	u821
  2101     0429  2C2B               	goto	u820
  2102     042A                     u821:
  2103     042A  2C5A               	goto	l1244
  2104     042B                     u820:
  2105     042B                     l1228:
  2106     042B  01F4               	clrf	___awmod@counter
  2107     042C  0AF4               	incf	___awmod@counter,f
  2108     042D  2C39               	goto	l1234
  2109     042E                     l1230:
  2110     042E  3001               	movlw	1
  2111     042F                     u835:
  2112     042F  1003               	clrc
  2113     0430  0DF0               	rlf	___awmod@divisor,f
  2114     0431  0DF1               	rlf	___awmod@divisor+1,f
  2115     0432  3EFF               	addlw	-1
  2116     0433  1D03               	skipz
  2117     0434  2C2F               	goto	u835
  2118     0435                     l1232:
  2119     0435  3001               	movlw	1
  2120     0436  00FF               	movwf	btemp+1
  2121     0437  087F               	movf	btemp+1,w
  2122     0438  07F4               	addwf	___awmod@counter,f
  2123     0439                     l1234:
  2124     0439  1FF1               	btfss	___awmod@divisor+1,7
  2125     043A  2C3C               	goto	u841
  2126     043B  2C3D               	goto	u840
  2127     043C                     u841:
  2128     043C  2C2E               	goto	l1230
  2129     043D                     u840:
  2130     043D                     l1236:
  2131     043D  0871               	movf	___awmod@divisor+1,w
  2132     043E  0273               	subwf	___awmod@dividend+1,w
  2133     043F  1D03               	skipz
  2134     0440  2C43               	goto	u855
  2135     0441  0870               	movf	___awmod@divisor,w
  2136     0442  0272               	subwf	___awmod@dividend,w
  2137     0443                     u855:
  2138     0443  1C03               	skipc
  2139     0444  2C46               	goto	u851
  2140     0445  2C47               	goto	u850
  2141     0446                     u851:
  2142     0446  2C4D               	goto	l1240
  2143     0447                     u850:
  2144     0447                     l1238:
  2145     0447  0870               	movf	___awmod@divisor,w
  2146     0448  02F2               	subwf	___awmod@dividend,f
  2147     0449  0871               	movf	___awmod@divisor+1,w
  2148     044A  1C03               	skipc
  2149     044B  03F3               	decf	___awmod@dividend+1,f
  2150     044C  02F3               	subwf	___awmod@dividend+1,f
  2151     044D                     l1240:
  2152     044D  3001               	movlw	1
  2153     044E                     u865:
  2154     044E  1003               	clrc
  2155     044F  0CF1               	rrf	___awmod@divisor+1,f
  2156     0450  0CF0               	rrf	___awmod@divisor,f
  2157     0451  3EFF               	addlw	-1
  2158     0452  1D03               	skipz
  2159     0453  2C4E               	goto	u865
  2160     0454                     l1242:
  2161     0454  3001               	movlw	1
  2162     0455  02F4               	subwf	___awmod@counter,f
  2163     0456  1D03               	btfss	3,2
  2164     0457  2C59               	goto	u871
  2165     0458  2C5A               	goto	u870
  2166     0459                     u871:
  2167     0459  2C3D               	goto	l1236
  2168     045A                     u870:
  2169     045A                     l1244:
  2170     045A  0875               	movf	___awmod@sign,w
  2171     045B  1903               	btfsc	3,2
  2172     045C  2C5E               	goto	u881
  2173     045D  2C5F               	goto	u880
  2174     045E                     u881:
  2175     045E  2C64               	goto	l1248
  2176     045F                     u880:
  2177     045F                     l1246:
  2178     045F  09F2               	comf	___awmod@dividend,f
  2179     0460  09F3               	comf	___awmod@dividend+1,f
  2180     0461  0AF2               	incf	___awmod@dividend,f
  2181     0462  1903               	skipnz
  2182     0463  0AF3               	incf	___awmod@dividend+1,f
  2183     0464                     l1248:
  2184     0464  0873               	movf	___awmod@dividend+1,w
  2185     0465  00F1               	movwf	?___awmod+1
  2186     0466  0872               	movf	___awmod@dividend,w
  2187     0467  00F0               	movwf	?___awmod
  2188     0468                     l362:
  2189     0468  0008               	return
  2190     0469                     __end_of___awmod:
  2191                           
  2192                           	psect	text10
  2193     04C7                     __ptext10:	
  2194 ;; *************** function ___awdiv *****************
  2195 ;; Defined at:
  2196 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  2197 ;; Parameters:    Size  Location     Type
  2198 ;;  divisor         2    0[COMMON] int 
  2199 ;;  dividend        2    2[COMMON] int 
  2200 ;; Auto vars:     Size  Location     Type
  2201 ;;  quotient        2    6[COMMON] int 
  2202 ;;  sign            1    5[COMMON] unsigned char 
  2203 ;;  counter         1    4[COMMON] unsigned char 
  2204 ;; Return value:  Size  Location     Type
  2205 ;;                  2    0[COMMON] int 
  2206 ;; Registers used:
  2207 ;;		wreg, status,2, status,0, btemp+1
  2208 ;; Tracked objects:
  2209 ;;		On entry : 0/0
  2210 ;;		On exit  : 0/0
  2211 ;;		Unchanged: 0/0
  2212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2213 ;;      Params:         4       0       0       0       0
  2214 ;;      Locals:         4       0       0       0       0
  2215 ;;      Temps:          0       0       0       0       0
  2216 ;;      Totals:         8       0       0       0       0
  2217 ;;Total ram usage:        8 bytes
  2218 ;; Hardware stack levels used: 1
  2219 ;; This function calls:
  2220 ;;		Nothing
  2221 ;; This function is called by:
  2222 ;;		_vfpfcnvrt
  2223 ;; This function uses a non-reentrant model
  2224 ;;
  2225                           
  2226     04C7                     ___awdiv:	
  2227                           ;psect for function ___awdiv
  2228                           
  2229     04C7                     l1170:	
  2230                           ;incstack = 0
  2231                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  2232                           
  2233     04C7  01F5               	clrf	___awdiv@sign
  2234     04C8                     l1172:
  2235     04C8  1FF1               	btfss	___awdiv@divisor+1,7
  2236     04C9  2CCB               	goto	u701
  2237     04CA  2CCC               	goto	u700
  2238     04CB                     u701:
  2239     04CB  2CD3               	goto	l1178
  2240     04CC                     u700:
  2241     04CC                     l1174:
  2242     04CC  09F0               	comf	___awdiv@divisor,f
  2243     04CD  09F1               	comf	___awdiv@divisor+1,f
  2244     04CE  0AF0               	incf	___awdiv@divisor,f
  2245     04CF  1903               	skipnz
  2246     04D0  0AF1               	incf	___awdiv@divisor+1,f
  2247     04D1                     l1176:
  2248     04D1  01F5               	clrf	___awdiv@sign
  2249     04D2  0AF5               	incf	___awdiv@sign,f
  2250     04D3                     l1178:
  2251     04D3  1FF3               	btfss	___awdiv@dividend+1,7
  2252     04D4  2CD6               	goto	u711
  2253     04D5  2CD7               	goto	u710
  2254     04D6                     u711:
  2255     04D6  2CE0               	goto	l1184
  2256     04D7                     u710:
  2257     04D7                     l1180:
  2258     04D7  09F2               	comf	___awdiv@dividend,f
  2259     04D8  09F3               	comf	___awdiv@dividend+1,f
  2260     04D9  0AF2               	incf	___awdiv@dividend,f
  2261     04DA  1903               	skipnz
  2262     04DB  0AF3               	incf	___awdiv@dividend+1,f
  2263     04DC                     l1182:
  2264     04DC  3001               	movlw	1
  2265     04DD  00FF               	movwf	btemp+1
  2266     04DE  087F               	movf	btemp+1,w
  2267     04DF  06F5               	xorwf	___awdiv@sign,f
  2268     04E0                     l1184:
  2269     04E0  01F6               	clrf	___awdiv@quotient
  2270     04E1  01F7               	clrf	___awdiv@quotient+1
  2271     04E2                     l1186:
  2272     04E2  0870               	movf	___awdiv@divisor,w
  2273     04E3  0471               	iorwf	___awdiv@divisor+1,w
  2274     04E4  1903               	btfsc	3,2
  2275     04E5  2CE7               	goto	u721
  2276     04E6  2CE8               	goto	u720
  2277     04E7                     u721:
  2278     04E7  2D1F               	goto	l1206
  2279     04E8                     u720:
  2280     04E8                     l1188:
  2281     04E8  01F4               	clrf	___awdiv@counter
  2282     04E9  0AF4               	incf	___awdiv@counter,f
  2283     04EA  2CF6               	goto	l1194
  2284     04EB                     l1190:
  2285     04EB  3001               	movlw	1
  2286     04EC                     u735:
  2287     04EC  1003               	clrc
  2288     04ED  0DF0               	rlf	___awdiv@divisor,f
  2289     04EE  0DF1               	rlf	___awdiv@divisor+1,f
  2290     04EF  3EFF               	addlw	-1
  2291     04F0  1D03               	skipz
  2292     04F1  2CEC               	goto	u735
  2293     04F2                     l1192:
  2294     04F2  3001               	movlw	1
  2295     04F3  00FF               	movwf	btemp+1
  2296     04F4  087F               	movf	btemp+1,w
  2297     04F5  07F4               	addwf	___awdiv@counter,f
  2298     04F6                     l1194:
  2299     04F6  1FF1               	btfss	___awdiv@divisor+1,7
  2300     04F7  2CF9               	goto	u741
  2301     04F8  2CFA               	goto	u740
  2302     04F9                     u741:
  2303     04F9  2CEB               	goto	l1190
  2304     04FA                     u740:
  2305     04FA                     l1196:
  2306     04FA  3001               	movlw	1
  2307     04FB                     u755:
  2308     04FB  1003               	clrc
  2309     04FC  0DF6               	rlf	___awdiv@quotient,f
  2310     04FD  0DF7               	rlf	___awdiv@quotient+1,f
  2311     04FE  3EFF               	addlw	-1
  2312     04FF  1D03               	skipz
  2313     0500  2CFB               	goto	u755
  2314     0501  0871               	movf	___awdiv@divisor+1,w
  2315     0502  0273               	subwf	___awdiv@dividend+1,w
  2316     0503  1D03               	skipz
  2317     0504  2D07               	goto	u765
  2318     0505  0870               	movf	___awdiv@divisor,w
  2319     0506  0272               	subwf	___awdiv@dividend,w
  2320     0507                     u765:
  2321     0507  1C03               	skipc
  2322     0508  2D0A               	goto	u761
  2323     0509  2D0B               	goto	u760
  2324     050A                     u761:
  2325     050A  2D12               	goto	l1202
  2326     050B                     u760:
  2327     050B                     l1198:
  2328     050B  0870               	movf	___awdiv@divisor,w
  2329     050C  02F2               	subwf	___awdiv@dividend,f
  2330     050D  0871               	movf	___awdiv@divisor+1,w
  2331     050E  1C03               	skipc
  2332     050F  03F3               	decf	___awdiv@dividend+1,f
  2333     0510  02F3               	subwf	___awdiv@dividend+1,f
  2334     0511                     l1200:
  2335     0511  1476               	bsf	___awdiv@quotient,0
  2336     0512                     l1202:
  2337     0512  3001               	movlw	1
  2338     0513                     u775:
  2339     0513  1003               	clrc
  2340     0514  0CF1               	rrf	___awdiv@divisor+1,f
  2341     0515  0CF0               	rrf	___awdiv@divisor,f
  2342     0516  3EFF               	addlw	-1
  2343     0517  1D03               	skipz
  2344     0518  2D13               	goto	u775
  2345     0519                     l1204:
  2346     0519  3001               	movlw	1
  2347     051A  02F4               	subwf	___awdiv@counter,f
  2348     051B  1D03               	btfss	3,2
  2349     051C  2D1E               	goto	u781
  2350     051D  2D1F               	goto	u780
  2351     051E                     u781:
  2352     051E  2CFA               	goto	l1196
  2353     051F                     u780:
  2354     051F                     l1206:
  2355     051F  0875               	movf	___awdiv@sign,w
  2356     0520  1903               	btfsc	3,2
  2357     0521  2D23               	goto	u791
  2358     0522  2D24               	goto	u790
  2359     0523                     u791:
  2360     0523  2D29               	goto	l1210
  2361     0524                     u790:
  2362     0524                     l1208:
  2363     0524  09F6               	comf	___awdiv@quotient,f
  2364     0525  09F7               	comf	___awdiv@quotient+1,f
  2365     0526  0AF6               	incf	___awdiv@quotient,f
  2366     0527  1903               	skipnz
  2367     0528  0AF7               	incf	___awdiv@quotient+1,f
  2368     0529                     l1210:
  2369     0529  0877               	movf	___awdiv@quotient+1,w
  2370     052A  00F1               	movwf	?___awdiv+1
  2371     052B  0876               	movf	___awdiv@quotient,w
  2372     052C  00F0               	movwf	?___awdiv
  2373     052D                     l349:
  2374     052D  0008               	return
  2375     052E                     __end_of___awdiv:
  2376                           
  2377                           	psect	text11
  2378     0220                     __ptext11:	
  2379 ;; *************** function _UART_Read *****************
  2380 ;; Defined at:
  2381 ;;		line 168 in file "picUARTrx.c"
  2382 ;; Parameters:    Size  Location     Type
  2383 ;;		None
  2384 ;; Auto vars:     Size  Location     Type
  2385 ;;		None
  2386 ;; Return value:  Size  Location     Type
  2387 ;;                  1    wreg      unsigned char 
  2388 ;; Registers used:
  2389 ;;		wreg
  2390 ;; Tracked objects:
  2391 ;;		On entry : 0/0
  2392 ;;		On exit  : 0/0
  2393 ;;		Unchanged: 0/0
  2394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2395 ;;      Params:         0       0       0       0       0
  2396 ;;      Locals:         0       0       0       0       0
  2397 ;;      Temps:          0       0       0       0       0
  2398 ;;      Totals:         0       0       0       0       0
  2399 ;;Total ram usage:        0 bytes
  2400 ;; Hardware stack levels used: 1
  2401 ;; This function calls:
  2402 ;;		Nothing
  2403 ;; This function is called by:
  2404 ;;		_main
  2405 ;;		_UART_Read_Text
  2406 ;; This function uses a non-reentrant model
  2407 ;;
  2408                           
  2409     0220                     _UART_Read:	
  2410                           ;psect for function _UART_Read
  2411                           
  2412     0220                     l1520:	
  2413                           ;incstack = 0
  2414                           ; Regs used in _UART_Read: [wreg]
  2415                           
  2416     0220                     l86:	
  2417                           ;picUARTrx.c: 169:     while (!PIR1bits.RCIF);
  2418                           
  2419     0220  1283               	bcf	3,5	;RP0=0, select bank0
  2420     0221  1303               	bcf	3,6	;RP1=0, select bank0
  2421     0222  1E8C               	btfss	12,5	;volatile
  2422     0223  2A25               	goto	u1361
  2423     0224  2A26               	goto	u1360
  2424     0225                     u1361:
  2425     0225  2A20               	goto	l86
  2426     0226                     u1360:
  2427     0226                     l1522:
  2428                           
  2429                           ;picUARTrx.c: 170:     return RCREG;
  2430     0226  081A               	movf	26,w	;volatile
  2431     0227                     l89:
  2432     0227  0008               	return
  2433     0228                     __end_of_UART_Read:
  2434                           
  2435                           	psect	text12
  2436     0268                     __ptext12:	
  2437 ;; *************** function _UART_Init_Rx *****************
  2438 ;; Defined at:
  2439 ;;		line 143 in file "picUARTrx.c"
  2440 ;; Parameters:    Size  Location     Type
  2441 ;;		None
  2442 ;; Auto vars:     Size  Location     Type
  2443 ;;		None
  2444 ;; Return value:  Size  Location     Type
  2445 ;;                  1    wreg      void 
  2446 ;; Registers used:
  2447 ;;		wreg
  2448 ;; Tracked objects:
  2449 ;;		On entry : 0/0
  2450 ;;		On exit  : 0/0
  2451 ;;		Unchanged: 0/0
  2452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2453 ;;      Params:         0       0       0       0       0
  2454 ;;      Locals:         0       0       0       0       0
  2455 ;;      Temps:          0       0       0       0       0
  2456 ;;      Totals:         0       0       0       0       0
  2457 ;;Total ram usage:        0 bytes
  2458 ;; Hardware stack levels used: 1
  2459 ;; This function calls:
  2460 ;;		Nothing
  2461 ;; This function is called by:
  2462 ;;		_main
  2463 ;; This function uses a non-reentrant model
  2464 ;;
  2465                           
  2466     0268                     _UART_Init_Rx:	
  2467                           ;psect for function _UART_Init_Rx
  2468                           
  2469     0268                     l1512:	
  2470                           ;incstack = 0
  2471                           ; Regs used in _UART_Init_Rx: [wreg]
  2472                           
  2473                           
  2474                           ;picUARTrx.c: 145:     TXSTAbits.CSRC=0;
  2475     0268  1683               	bsf	3,5	;RP0=1, select bank1
  2476     0269  1303               	bcf	3,6	;RP1=0, select bank1
  2477     026A  1398               	bcf	24,7	;volatile
  2478                           
  2479                           ;picUARTrx.c: 146:     TXSTAbits.TX9=0;
  2480     026B  1318               	bcf	24,6	;volatile
  2481                           
  2482                           ;picUARTrx.c: 147:     TXSTAbits.TXEN=1;
  2483     026C  1698               	bsf	24,5	;volatile
  2484                           
  2485                           ;picUARTrx.c: 148:     TXSTAbits.SYNC=0;
  2486     026D  1218               	bcf	24,4	;volatile
  2487                           
  2488                           ;picUARTrx.c: 149:     TXSTAbits.BRGH=1;
  2489     026E  1518               	bsf	24,2	;volatile
  2490                           
  2491                           ;picUARTrx.c: 150:     TXSTAbits.TRMT=0;
  2492     026F  1098               	bcf	24,1	;volatile
  2493                           
  2494                           ;picUARTrx.c: 151:     TXSTAbits.TX9D=0;
  2495     0270  1018               	bcf	24,0	;volatile
  2496                           
  2497                           ;picUARTrx.c: 153:     RCSTAbits.SPEN=1;
  2498     0271  1283               	bcf	3,5	;RP0=0, select bank0
  2499     0272  1303               	bcf	3,6	;RP1=0, select bank0
  2500     0273  1798               	bsf	24,7	;volatile
  2501                           
  2502                           ;picUARTrx.c: 154:     RCSTAbits.RX9=0;
  2503     0274  1318               	bcf	24,6	;volatile
  2504                           
  2505                           ;picUARTrx.c: 155:     RCSTAbits.SREN=0;
  2506     0275  1298               	bcf	24,5	;volatile
  2507                           
  2508                           ;picUARTrx.c: 156:     RCSTAbits.CREN=1;
  2509     0276  1618               	bsf	24,4	;volatile
  2510                           
  2511                           ;picUARTrx.c: 157:     RCSTAbits.ADDEN=0;
  2512     0277  1198               	bcf	24,3	;volatile
  2513                           
  2514                           ;picUARTrx.c: 158:     RCSTAbits.FERR=0;
  2515     0278  1118               	bcf	24,2	;volatile
  2516                           
  2517                           ;picUARTrx.c: 159:     RCSTAbits.OERR=0;
  2518     0279  1098               	bcf	24,1	;volatile
  2519                           
  2520                           ;picUARTrx.c: 160:     RCSTAbits.RX9D=0;
  2521     027A  1018               	bcf	24,0	;volatile
  2522     027B                     l1514:
  2523                           
  2524                           ;picUARTrx.c: 162:     SPBRG = 129;
  2525     027B  3081               	movlw	129
  2526     027C  1683               	bsf	3,5	;RP0=1, select bank1
  2527     027D  1303               	bcf	3,6	;RP1=0, select bank1
  2528     027E  0099               	movwf	25	;volatile
  2529     027F                     l1516:
  2530                           
  2531                           ;picUARTrx.c: 163:     TRISCbits.TRISC7 = 1;
  2532     027F  1787               	bsf	7,7	;volatile
  2533     0280                     l1518:
  2534                           
  2535                           ;picUARTrx.c: 164:     TRISCbits.TRISC6 = 0;
  2536     0280  1307               	bcf	7,6	;volatile
  2537     0281                     l83:
  2538     0281  0008               	return
  2539     0282                     __end_of_UART_Init_Rx:
  2540                           
  2541                           	psect	text13
  2542     02A1                     __ptext13:	
  2543 ;; *************** function _Lcd_Write_String *****************
  2544 ;; Defined at:
  2545 ;;		line 121 in file "picUARTrx.c"
  2546 ;; Parameters:    Size  Location     Type
  2547 ;;  a               1    wreg     PTR unsigned char 
  2548 ;;		 -> main@adcDisplay(80), 
  2549 ;; Auto vars:     Size  Location     Type
  2550 ;;  a               1    8[COMMON] PTR unsigned char 
  2551 ;;		 -> main@adcDisplay(80), 
  2552 ;;  i               2    6[COMMON] int 
  2553 ;; Return value:  Size  Location     Type
  2554 ;;                  1    wreg      void 
  2555 ;; Registers used:
  2556 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2557 ;; Tracked objects:
  2558 ;;		On entry : 0/0
  2559 ;;		On exit  : 0/0
  2560 ;;		Unchanged: 0/0
  2561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2562 ;;      Params:         0       0       0       0       0
  2563 ;;      Locals:         3       0       0       0       0
  2564 ;;      Temps:          1       0       0       0       0
  2565 ;;      Totals:         4       0       0       0       0
  2566 ;;Total ram usage:        4 bytes
  2567 ;; Hardware stack levels used: 1
  2568 ;; Hardware stack levels required when called: 2
  2569 ;; This function calls:
  2570 ;;		_Lcd_Write_Char
  2571 ;; This function is called by:
  2572 ;;		_main
  2573 ;; This function uses a non-reentrant model
  2574 ;;
  2575                           
  2576     02A1                     _Lcd_Write_String:	
  2577                           ;psect for function _Lcd_Write_String
  2578                           
  2579                           
  2580                           ;incstack = 0
  2581                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2582                           ;Lcd_Write_String@a stored from wreg
  2583     02A1  00F8               	movwf	Lcd_Write_String@a
  2584     02A2                     l1502:
  2585                           
  2586                           ;picUARTrx.c: 122:  int i;;picUARTrx.c: 123:  for(i=0;a[i]!='\0';i++)
  2587     02A2  01F6               	clrf	Lcd_Write_String@i
  2588     02A3  01F7               	clrf	Lcd_Write_String@i+1
  2589     02A4  2AB6               	goto	l1508
  2590     02A5                     l1504:
  2591                           
  2592                           ;picUARTrx.c: 124:     Lcd_Write_Char(a[i]);
  2593     02A5  0876               	movf	Lcd_Write_String@i,w
  2594     02A6  0778               	addwf	Lcd_Write_String@a,w
  2595     02A7  00F5               	movwf	??_Lcd_Write_String
  2596     02A8  0875               	movf	??_Lcd_Write_String,w
  2597     02A9  0084               	movwf	4
  2598     02AA  0800               	movf	0,w
  2599     02AB  120A  118A  2305  120A  118A  	fcall	_Lcd_Write_Char
  2600     02B0                     l1506:
  2601     02B0  3001               	movlw	1
  2602     02B1  07F6               	addwf	Lcd_Write_String@i,f
  2603     02B2  1803               	skipnc
  2604     02B3  0AF7               	incf	Lcd_Write_String@i+1,f
  2605     02B4  3000               	movlw	0
  2606     02B5  07F7               	addwf	Lcd_Write_String@i+1,f
  2607     02B6                     l1508:
  2608     02B6  0876               	movf	Lcd_Write_String@i,w
  2609     02B7  0778               	addwf	Lcd_Write_String@a,w
  2610     02B8  00F5               	movwf	??_Lcd_Write_String
  2611     02B9  0875               	movf	??_Lcd_Write_String,w
  2612     02BA  0084               	movwf	4
  2613     02BB  1783               	bsf	3,7	;select IRP bank2
  2614     02BC  0800               	movf	0,w
  2615     02BD  1D03               	btfss	3,2
  2616     02BE  2AC0               	goto	u1351
  2617     02BF  2AC1               	goto	u1350
  2618     02C0                     u1351:
  2619     02C0  2AA5               	goto	l1504
  2620     02C1                     u1350:
  2621     02C1                     l71:
  2622     02C1  0008               	return
  2623     02C2                     __end_of_Lcd_Write_String:
  2624                           
  2625                           	psect	text14
  2626     0305                     __ptext14:	
  2627 ;; *************** function _Lcd_Write_Char *****************
  2628 ;; Defined at:
  2629 ;;		line 106 in file "picUARTrx.c"
  2630 ;; Parameters:    Size  Location     Type
  2631 ;;  a               1    wreg     unsigned char 
  2632 ;; Auto vars:     Size  Location     Type
  2633 ;;  a               1    4[COMMON] unsigned char 
  2634 ;;  y               1    3[COMMON] unsigned char 
  2635 ;;  temp            1    2[COMMON] unsigned char 
  2636 ;; Return value:  Size  Location     Type
  2637 ;;                  1    wreg      void 
  2638 ;; Registers used:
  2639 ;;		wreg, status,2, status,0, pclath, cstack
  2640 ;; Tracked objects:
  2641 ;;		On entry : 0/0
  2642 ;;		On exit  : 0/0
  2643 ;;		Unchanged: 0/0
  2644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2645 ;;      Params:         0       0       0       0       0
  2646 ;;      Locals:         3       0       0       0       0
  2647 ;;      Temps:          1       0       0       0       0
  2648 ;;      Totals:         4       0       0       0       0
  2649 ;;Total ram usage:        4 bytes
  2650 ;; Hardware stack levels used: 1
  2651 ;; Hardware stack levels required when called: 1
  2652 ;; This function calls:
  2653 ;;		_Lcd_Port
  2654 ;; This function is called by:
  2655 ;;		_Lcd_Write_String
  2656 ;; This function uses a non-reentrant model
  2657 ;;
  2658                           
  2659     0305                     _Lcd_Write_Char:	
  2660                           ;psect for function _Lcd_Write_Char
  2661                           
  2662                           
  2663                           ;incstack = 0
  2664                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2665                           ;Lcd_Write_Char@a stored from wreg
  2666     0305  00F4               	movwf	Lcd_Write_Char@a
  2667     0306                     l1420:
  2668                           
  2669                           ;picUARTrx.c: 107:    char temp,y;;picUARTrx.c: 108:    temp = a&0x0F;
  2670     0306  0874               	movf	Lcd_Write_Char@a,w
  2671     0307  390F               	andlw	15
  2672     0308  00F2               	movwf	Lcd_Write_Char@temp
  2673                           
  2674                           ;picUARTrx.c: 109:    y = a&0xF0;
  2675     0309  0874               	movf	Lcd_Write_Char@a,w
  2676     030A  39F0               	andlw	240
  2677     030B  00F3               	movwf	Lcd_Write_Char@y
  2678     030C                     l1422:
  2679                           
  2680                           ;picUARTrx.c: 110:    RB0 = 1;
  2681     030C  1283               	bcf	3,5	;RP0=0, select bank0
  2682     030D  1303               	bcf	3,6	;RP1=0, select bank0
  2683     030E  1406               	bsf	6,0	;volatile
  2684     030F                     l1424:
  2685                           
  2686                           ;picUARTrx.c: 111:    Lcd_Port(y>>4);
  2687     030F  0873               	movf	Lcd_Write_Char@y,w
  2688     0310  00F1               	movwf	??_Lcd_Write_Char
  2689     0311  3004               	movlw	4
  2690     0312                     u1255:
  2691     0312  1003               	clrc
  2692     0313  0CF1               	rrf	??_Lcd_Write_Char,f
  2693     0314  3EFF               	addlw	-1
  2694     0315  1D03               	skipz
  2695     0316  2B12               	goto	u1255
  2696     0317  0871               	movf	??_Lcd_Write_Char,w
  2697     0318  120A  118A  22E3  120A  118A  	fcall	_Lcd_Port
  2698     031D                     l1426:
  2699                           
  2700                           ;picUARTrx.c: 112:    RB1 = 1;
  2701     031D  1283               	bcf	3,5	;RP0=0, select bank0
  2702     031E  1303               	bcf	3,6	;RP1=0, select bank0
  2703     031F  1486               	bsf	6,1	;volatile
  2704     0320                     l1428:
  2705                           
  2706                           ;picUARTrx.c: 113:    _delay((unsigned long)((40)*(20000000/4000000.0)));
  2707     0320  3042               	movlw	66
  2708     0321  00F1               	movwf	??_Lcd_Write_Char
  2709     0322                     u1407:
  2710     0322  0BF1               	decfsz	??_Lcd_Write_Char,f
  2711     0323  2B22               	goto	u1407
  2712     0324  0000               	nop
  2713     0325                     l1430:
  2714                           
  2715                           ;picUARTrx.c: 114:    RB1 = 0;
  2716     0325  1283               	bcf	3,5	;RP0=0, select bank0
  2717     0326  1303               	bcf	3,6	;RP1=0, select bank0
  2718     0327  1086               	bcf	6,1	;volatile
  2719     0328                     l1432:
  2720                           
  2721                           ;picUARTrx.c: 115:    Lcd_Port(temp);
  2722     0328  0872               	movf	Lcd_Write_Char@temp,w
  2723     0329  120A  118A  22E3  120A  118A  	fcall	_Lcd_Port
  2724     032E                     l1434:
  2725                           
  2726                           ;picUARTrx.c: 116:    RB1 = 1;
  2727     032E  1283               	bcf	3,5	;RP0=0, select bank0
  2728     032F  1303               	bcf	3,6	;RP1=0, select bank0
  2729     0330  1486               	bsf	6,1	;volatile
  2730     0331                     l1436:
  2731                           
  2732                           ;picUARTrx.c: 117:    _delay((unsigned long)((40)*(20000000/4000000.0)));
  2733     0331  3042               	movlw	66
  2734     0332  00F1               	movwf	??_Lcd_Write_Char
  2735     0333                     u1417:
  2736     0333  0BF1               	decfsz	??_Lcd_Write_Char,f
  2737     0334  2B33               	goto	u1417
  2738     0335  0000               	nop
  2739     0336                     l1438:
  2740                           
  2741                           ;picUARTrx.c: 118:    RB1 = 0;
  2742     0336  1283               	bcf	3,5	;RP0=0, select bank0
  2743     0337  1303               	bcf	3,6	;RP1=0, select bank0
  2744     0338  1086               	bcf	6,1	;volatile
  2745     0339                     l65:
  2746     0339  0008               	return
  2747     033A                     __end_of_Lcd_Write_Char:
  2748                           
  2749                           	psect	text15
  2750     052E                     __ptext15:	
  2751 ;; *************** function _Lcd_Set_Cursor *****************
  2752 ;; Defined at:
  2753 ;;		line 54 in file "picUARTrx.c"
  2754 ;; Parameters:    Size  Location     Type
  2755 ;;  a               1    wreg     unsigned char 
  2756 ;;  b               1    4[COMMON] unsigned char 
  2757 ;; Auto vars:     Size  Location     Type
  2758 ;;  a               1    6[COMMON] unsigned char 
  2759 ;;  temp            1    9[COMMON] unsigned char 
  2760 ;;  y               1    8[COMMON] unsigned char 
  2761 ;;  z               1    7[COMMON] unsigned char 
  2762 ;; Return value:  Size  Location     Type
  2763 ;;                  1    wreg      void 
  2764 ;; Registers used:
  2765 ;;		wreg, status,2, status,0, pclath, cstack
  2766 ;; Tracked objects:
  2767 ;;		On entry : 0/0
  2768 ;;		On exit  : 0/0
  2769 ;;		Unchanged: 0/0
  2770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2771 ;;      Params:         1       0       0       0       0
  2772 ;;      Locals:         4       0       0       0       0
  2773 ;;      Temps:          1       0       0       0       0
  2774 ;;      Totals:         6       0       0       0       0
  2775 ;;Total ram usage:        6 bytes
  2776 ;; Hardware stack levels used: 1
  2777 ;; Hardware stack levels required when called: 2
  2778 ;; This function calls:
  2779 ;;		_Lcd_Cmd
  2780 ;; This function is called by:
  2781 ;;		_main
  2782 ;; This function uses a non-reentrant model
  2783 ;;
  2784                           
  2785     052E                     _Lcd_Set_Cursor:	
  2786                           ;psect for function _Lcd_Set_Cursor
  2787                           
  2788                           
  2789                           ;incstack = 0
  2790                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2791                           ;Lcd_Set_Cursor@a stored from wreg
  2792     052E  00F6               	movwf	Lcd_Set_Cursor@a
  2793     052F                     l1452:
  2794                           
  2795                           ;picUARTrx.c: 55:  char temp,z,y;;picUARTrx.c: 56:  if(a == 1){
  2796     052F  0376               	decf	Lcd_Set_Cursor@a,w
  2797     0530  1D03               	btfss	3,2
  2798     0531  2D33               	goto	u1271
  2799     0532  2D34               	goto	u1270
  2800     0533                     u1271:
  2801     0533  2D51               	goto	l1462
  2802     0534                     u1270:
  2803     0534                     l1454:
  2804                           
  2805                           ;picUARTrx.c: 57:    temp = 0x80 + b - 1;
  2806     0534  0874               	movf	Lcd_Set_Cursor@b,w
  2807     0535  3E7F               	addlw	127
  2808     0536  00F9               	movwf	Lcd_Set_Cursor@temp
  2809                           
  2810                           ;picUARTrx.c: 58:   z = temp>>4;
  2811     0537  0879               	movf	Lcd_Set_Cursor@temp,w
  2812     0538  00F5               	movwf	??_Lcd_Set_Cursor
  2813     0539  3004               	movlw	4
  2814     053A                     u1285:
  2815     053A  1003               	clrc
  2816     053B  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2817     053C  3EFF               	addlw	-1
  2818     053D  1D03               	skipz
  2819     053E  2D3A               	goto	u1285
  2820     053F  0875               	movf	??_Lcd_Set_Cursor,w
  2821     0540  00F7               	movwf	Lcd_Set_Cursor@z
  2822     0541                     l1456:
  2823                           
  2824                           ;picUARTrx.c: 59:   y = temp & 0x0F;
  2825     0541  0879               	movf	Lcd_Set_Cursor@temp,w
  2826     0542  390F               	andlw	15
  2827     0543  00F8               	movwf	Lcd_Set_Cursor@y
  2828     0544                     l1458:
  2829                           
  2830                           ;picUARTrx.c: 60:   Lcd_Cmd(z);
  2831     0544  0877               	movf	Lcd_Set_Cursor@z,w
  2832     0545  120A  118A  224E  120A  118A  	fcall	_Lcd_Cmd
  2833     054A                     l1460:
  2834                           
  2835                           ;picUARTrx.c: 61:   Lcd_Cmd(y);
  2836     054A  0878               	movf	Lcd_Set_Cursor@y,w
  2837     054B  120A  118A  224E  120A  118A  	fcall	_Lcd_Cmd
  2838                           
  2839                           ;picUARTrx.c: 62:  }
  2840     0550  2DBA               	goto	l59
  2841     0551                     l1462:
  2842     0551  3002               	movlw	2
  2843     0552  0676               	xorwf	Lcd_Set_Cursor@a,w
  2844     0553  1D03               	btfss	3,2
  2845     0554  2D56               	goto	u1291
  2846     0555  2D57               	goto	u1290
  2847     0556                     u1291:
  2848     0556  2D74               	goto	l1472
  2849     0557                     u1290:
  2850     0557                     l1464:
  2851                           
  2852                           ;picUARTrx.c: 64:   temp = 0xC0 + b - 1;
  2853     0557  0874               	movf	Lcd_Set_Cursor@b,w
  2854     0558  3EBF               	addlw	191
  2855     0559  00F9               	movwf	Lcd_Set_Cursor@temp
  2856                           
  2857                           ;picUARTrx.c: 65:   z = temp>>4;
  2858     055A  0879               	movf	Lcd_Set_Cursor@temp,w
  2859     055B  00F5               	movwf	??_Lcd_Set_Cursor
  2860     055C  3004               	movlw	4
  2861     055D                     u1305:
  2862     055D  1003               	clrc
  2863     055E  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2864     055F  3EFF               	addlw	-1
  2865     0560  1D03               	skipz
  2866     0561  2D5D               	goto	u1305
  2867     0562  0875               	movf	??_Lcd_Set_Cursor,w
  2868     0563  00F7               	movwf	Lcd_Set_Cursor@z
  2869     0564                     l1466:
  2870                           
  2871                           ;picUARTrx.c: 66:   y = temp & 0x0F;
  2872     0564  0879               	movf	Lcd_Set_Cursor@temp,w
  2873     0565  390F               	andlw	15
  2874     0566  00F8               	movwf	Lcd_Set_Cursor@y
  2875     0567                     l1468:
  2876                           
  2877                           ;picUARTrx.c: 67:   Lcd_Cmd(z);
  2878     0567  0877               	movf	Lcd_Set_Cursor@z,w
  2879     0568  120A  118A  224E  120A  118A  	fcall	_Lcd_Cmd
  2880     056D                     l1470:
  2881                           
  2882                           ;picUARTrx.c: 68:   Lcd_Cmd(y);
  2883     056D  0878               	movf	Lcd_Set_Cursor@y,w
  2884     056E  120A  118A  224E  120A  118A  	fcall	_Lcd_Cmd
  2885                           
  2886                           ;picUARTrx.c: 69:  }
  2887     0573  2DBA               	goto	l59
  2888     0574                     l1472:
  2889     0574  3003               	movlw	3
  2890     0575  0676               	xorwf	Lcd_Set_Cursor@a,w
  2891     0576  1D03               	btfss	3,2
  2892     0577  2D79               	goto	u1311
  2893     0578  2D7A               	goto	u1310
  2894     0579                     u1311:
  2895     0579  2D97               	goto	l1482
  2896     057A                     u1310:
  2897     057A                     l1474:
  2898                           
  2899                           ;picUARTrx.c: 72:         temp = 0x90 + b - 1;
  2900     057A  0874               	movf	Lcd_Set_Cursor@b,w
  2901     057B  3E8F               	addlw	143
  2902     057C  00F9               	movwf	Lcd_Set_Cursor@temp
  2903                           
  2904                           ;picUARTrx.c: 73:         z = temp >> 4;
  2905     057D  0879               	movf	Lcd_Set_Cursor@temp,w
  2906     057E  00F5               	movwf	??_Lcd_Set_Cursor
  2907     057F  3004               	movlw	4
  2908     0580                     u1325:
  2909     0580  1003               	clrc
  2910     0581  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2911     0582  3EFF               	addlw	-1
  2912     0583  1D03               	skipz
  2913     0584  2D80               	goto	u1325
  2914     0585  0875               	movf	??_Lcd_Set_Cursor,w
  2915     0586  00F7               	movwf	Lcd_Set_Cursor@z
  2916     0587                     l1476:
  2917                           
  2918                           ;picUARTrx.c: 74:         y = temp & 0x0F;
  2919     0587  0879               	movf	Lcd_Set_Cursor@temp,w
  2920     0588  390F               	andlw	15
  2921     0589  00F8               	movwf	Lcd_Set_Cursor@y
  2922     058A                     l1478:
  2923                           
  2924                           ;picUARTrx.c: 75:         Lcd_Cmd(z);
  2925     058A  0877               	movf	Lcd_Set_Cursor@z,w
  2926     058B  120A  118A  224E  120A  118A  	fcall	_Lcd_Cmd
  2927     0590                     l1480:
  2928                           
  2929                           ;picUARTrx.c: 76:         Lcd_Cmd(y);
  2930     0590  0878               	movf	Lcd_Set_Cursor@y,w
  2931     0591  120A  118A  224E  120A  118A  	fcall	_Lcd_Cmd
  2932                           
  2933                           ;picUARTrx.c: 77:     }
  2934     0596  2DBA               	goto	l59
  2935     0597                     l1482:
  2936     0597  3004               	movlw	4
  2937     0598  0676               	xorwf	Lcd_Set_Cursor@a,w
  2938     0599  1D03               	btfss	3,2
  2939     059A  2D9C               	goto	u1331
  2940     059B  2D9D               	goto	u1330
  2941     059C                     u1331:
  2942     059C  2DBA               	goto	l55
  2943     059D                     u1330:
  2944     059D                     l1484:
  2945                           
  2946                           ;picUARTrx.c: 80:         temp = 0xD0 + b - 1;
  2947     059D  0874               	movf	Lcd_Set_Cursor@b,w
  2948     059E  3ECF               	addlw	207
  2949     059F  00F9               	movwf	Lcd_Set_Cursor@temp
  2950                           
  2951                           ;picUARTrx.c: 81:         z = temp >> 4;
  2952     05A0  0879               	movf	Lcd_Set_Cursor@temp,w
  2953     05A1  00F5               	movwf	??_Lcd_Set_Cursor
  2954     05A2  3004               	movlw	4
  2955     05A3                     u1345:
  2956     05A3  1003               	clrc
  2957     05A4  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2958     05A5  3EFF               	addlw	-1
  2959     05A6  1D03               	skipz
  2960     05A7  2DA3               	goto	u1345
  2961     05A8  0875               	movf	??_Lcd_Set_Cursor,w
  2962     05A9  00F7               	movwf	Lcd_Set_Cursor@z
  2963     05AA                     l1486:
  2964                           
  2965                           ;picUARTrx.c: 82:         y = temp & 0x0F;
  2966     05AA  0879               	movf	Lcd_Set_Cursor@temp,w
  2967     05AB  390F               	andlw	15
  2968     05AC  00F8               	movwf	Lcd_Set_Cursor@y
  2969     05AD                     l1488:
  2970                           
  2971                           ;picUARTrx.c: 83:         Lcd_Cmd(z);
  2972     05AD  0877               	movf	Lcd_Set_Cursor@z,w
  2973     05AE  120A  118A  224E  120A  118A  	fcall	_Lcd_Cmd
  2974     05B3                     l1490:
  2975                           
  2976                           ;picUARTrx.c: 84:         Lcd_Cmd(y);
  2977     05B3  0878               	movf	Lcd_Set_Cursor@y,w
  2978     05B4  120A  118A  224E  120A  118A  	fcall	_Lcd_Cmd
  2979     05B9  2DBA               	goto	l59
  2980     05BA                     l55:
  2981     05BA                     l59:
  2982     05BA  0008               	return
  2983     05BB                     __end_of_Lcd_Set_Cursor:
  2984                           
  2985                           	psect	text16
  2986     0469                     __ptext16:	
  2987 ;; *************** function _Lcd_Init *****************
  2988 ;; Defined at:
  2989 ;;		line 89 in file "picUARTrx.c"
  2990 ;; Parameters:    Size  Location     Type
  2991 ;;		None
  2992 ;; Auto vars:     Size  Location     Type
  2993 ;;		None
  2994 ;; Return value:  Size  Location     Type
  2995 ;;                  1    wreg      void 
  2996 ;; Registers used:
  2997 ;;		wreg, status,2, status,0, pclath, cstack
  2998 ;; Tracked objects:
  2999 ;;		On entry : 0/0
  3000 ;;		On exit  : 0/0
  3001 ;;		Unchanged: 0/0
  3002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3003 ;;      Params:         0       0       0       0       0
  3004 ;;      Locals:         0       0       0       0       0
  3005 ;;      Temps:          2       0       0       0       0
  3006 ;;      Totals:         2       0       0       0       0
  3007 ;;Total ram usage:        2 bytes
  3008 ;; Hardware stack levels used: 1
  3009 ;; Hardware stack levels required when called: 2
  3010 ;; This function calls:
  3011 ;;		_Lcd_Cmd
  3012 ;;		_Lcd_Port
  3013 ;; This function is called by:
  3014 ;;		_main
  3015 ;; This function uses a non-reentrant model
  3016 ;;
  3017                           
  3018     0469                     _Lcd_Init:	
  3019                           ;psect for function _Lcd_Init
  3020                           
  3021     0469                     l1492:	
  3022                           ;incstack = 0
  3023                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3024                           
  3025                           
  3026                           ;picUARTrx.c: 90:     Lcd_Port(0x00);
  3027     0469  3000               	movlw	0
  3028     046A  120A  118A  22E3  120A  118A  	fcall	_Lcd_Port
  3029     046F                     l1494:
  3030                           
  3031                           ;picUARTrx.c: 91:     _delay((unsigned long)((20)*(20000000/4000.0)));
  3032     046F  3082               	movlw	130
  3033     0470  00F5               	movwf	??_Lcd_Init+1
  3034     0471  30DD               	movlw	221
  3035     0472  00F4               	movwf	??_Lcd_Init
  3036     0473                     u1427:
  3037     0473  0BF4               	decfsz	??_Lcd_Init,f
  3038     0474  2C73               	goto	u1427
  3039     0475  0BF5               	decfsz	??_Lcd_Init+1,f
  3040     0476  2C73               	goto	u1427
  3041     0477  2C78               	nop2
  3042     0478                     l1496:
  3043                           
  3044                           ;picUARTrx.c: 92:     Lcd_Cmd(0x03);
  3045     0478  3003               	movlw	3
  3046     0479  120A  118A  224E  120A  118A  	fcall	_Lcd_Cmd
  3047                           
  3048                           ;picUARTrx.c: 93:  _delay((unsigned long)((5)*(20000000/4000.0)));
  3049     047E  3021               	movlw	33
  3050     047F  00F5               	movwf	??_Lcd_Init+1
  3051     0480  3076               	movlw	118
  3052     0481  00F4               	movwf	??_Lcd_Init
  3053     0482                     u1437:
  3054     0482  0BF4               	decfsz	??_Lcd_Init,f
  3055     0483  2C82               	goto	u1437
  3056     0484  0BF5               	decfsz	??_Lcd_Init+1,f
  3057     0485  2C82               	goto	u1437
  3058     0486  0000               	nop
  3059     0487                     l1498:
  3060                           
  3061                           ;picUARTrx.c: 94:     Lcd_Cmd(0x03);
  3062     0487  3003               	movlw	3
  3063     0488  120A  118A  224E  120A  118A  	fcall	_Lcd_Cmd
  3064     048D                     l1500:
  3065                           
  3066                           ;picUARTrx.c: 95:  _delay((unsigned long)((11)*(20000000/4000.0)));
  3067     048D  3048               	movlw	72
  3068     048E  00F5               	movwf	??_Lcd_Init+1
  3069     048F  306C               	movlw	108
  3070     0490  00F4               	movwf	??_Lcd_Init
  3071     0491                     u1447:
  3072     0491  0BF4               	decfsz	??_Lcd_Init,f
  3073     0492  2C91               	goto	u1447
  3074     0493  0BF5               	decfsz	??_Lcd_Init+1,f
  3075     0494  2C91               	goto	u1447
  3076     0495  0000               	nop
  3077                           
  3078                           ;picUARTrx.c: 96:     Lcd_Cmd(0x03);
  3079     0496  3003               	movlw	3
  3080     0497  120A  118A  224E  120A  118A  	fcall	_Lcd_Cmd
  3081                           
  3082                           ;picUARTrx.c: 97:     Lcd_Cmd(0x02);
  3083     049C  3002               	movlw	2
  3084     049D  120A  118A  224E  120A  118A  	fcall	_Lcd_Cmd
  3085                           
  3086                           ;picUARTrx.c: 98:     Lcd_Cmd(0x02);
  3087     04A2  3002               	movlw	2
  3088     04A3  120A  118A  224E  120A  118A  	fcall	_Lcd_Cmd
  3089                           
  3090                           ;picUARTrx.c: 99:     Lcd_Cmd(0x08);
  3091     04A8  3008               	movlw	8
  3092     04A9  120A  118A  224E  120A  118A  	fcall	_Lcd_Cmd
  3093                           
  3094                           ;picUARTrx.c: 100:     Lcd_Cmd(0x00);
  3095     04AE  3000               	movlw	0
  3096     04AF  120A  118A  224E  120A  118A  	fcall	_Lcd_Cmd
  3097                           
  3098                           ;picUARTrx.c: 101:     Lcd_Cmd(0x0C);
  3099     04B4  300C               	movlw	12
  3100     04B5  120A  118A  224E  120A  118A  	fcall	_Lcd_Cmd
  3101                           
  3102                           ;picUARTrx.c: 102:     Lcd_Cmd(0x00);
  3103     04BA  3000               	movlw	0
  3104     04BB  120A  118A  224E  120A  118A  	fcall	_Lcd_Cmd
  3105                           
  3106                           ;picUARTrx.c: 103:     Lcd_Cmd(0x06);
  3107     04C0  3006               	movlw	6
  3108     04C1  120A  118A  224E  120A  118A  	fcall	_Lcd_Cmd
  3109     04C6                     l62:
  3110     04C6  0008               	return
  3111     04C7                     __end_of_Lcd_Init:
  3112                           
  3113                           	psect	text17
  3114     0230                     __ptext17:	
  3115 ;; *************** function _Lcd_Clear *****************
  3116 ;; Defined at:
  3117 ;;		line 49 in file "picUARTrx.c"
  3118 ;; Parameters:    Size  Location     Type
  3119 ;;		None
  3120 ;; Auto vars:     Size  Location     Type
  3121 ;;		None
  3122 ;; Return value:  Size  Location     Type
  3123 ;;                  1    wreg      void 
  3124 ;; Registers used:
  3125 ;;		wreg, status,2, status,0, pclath, cstack
  3126 ;; Tracked objects:
  3127 ;;		On entry : 0/0
  3128 ;;		On exit  : 0/0
  3129 ;;		Unchanged: 0/0
  3130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3131 ;;      Params:         0       0       0       0       0
  3132 ;;      Locals:         0       0       0       0       0
  3133 ;;      Temps:          0       0       0       0       0
  3134 ;;      Totals:         0       0       0       0       0
  3135 ;;Total ram usage:        0 bytes
  3136 ;; Hardware stack levels used: 1
  3137 ;; Hardware stack levels required when called: 2
  3138 ;; This function calls:
  3139 ;;		_Lcd_Cmd
  3140 ;; This function is called by:
  3141 ;;		_main
  3142 ;; This function uses a non-reentrant model
  3143 ;;
  3144                           
  3145     0230                     _Lcd_Clear:	
  3146                           ;psect for function _Lcd_Clear
  3147                           
  3148     0230                     l1450:	
  3149                           ;incstack = 0
  3150                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3151                           
  3152                           
  3153                           ;picUARTrx.c: 50:  Lcd_Cmd(0);
  3154     0230  3000               	movlw	0
  3155     0231  120A  118A  224E  120A  118A  	fcall	_Lcd_Cmd
  3156                           
  3157                           ;picUARTrx.c: 51:  Lcd_Cmd(1);
  3158     0236  3001               	movlw	1
  3159     0237  120A  118A  224E  120A  118A  	fcall	_Lcd_Cmd
  3160     023C                     l49:
  3161     023C  0008               	return
  3162     023D                     __end_of_Lcd_Clear:
  3163                           
  3164                           	psect	text18
  3165     024E                     __ptext18:	
  3166 ;; *************** function _Lcd_Cmd *****************
  3167 ;; Defined at:
  3168 ;;		line 41 in file "picUARTrx.c"
  3169 ;; Parameters:    Size  Location     Type
  3170 ;;  a               1    wreg     unsigned char 
  3171 ;; Auto vars:     Size  Location     Type
  3172 ;;  a               1    3[COMMON] unsigned char 
  3173 ;; Return value:  Size  Location     Type
  3174 ;;                  1    wreg      void 
  3175 ;; Registers used:
  3176 ;;		wreg, status,2, status,0, pclath, cstack
  3177 ;; Tracked objects:
  3178 ;;		On entry : 0/0
  3179 ;;		On exit  : 0/0
  3180 ;;		Unchanged: 0/0
  3181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3182 ;;      Params:         0       0       0       0       0
  3183 ;;      Locals:         1       0       0       0       0
  3184 ;;      Temps:          2       0       0       0       0
  3185 ;;      Totals:         3       0       0       0       0
  3186 ;;Total ram usage:        3 bytes
  3187 ;; Hardware stack levels used: 1
  3188 ;; Hardware stack levels required when called: 1
  3189 ;; This function calls:
  3190 ;;		_Lcd_Port
  3191 ;; This function is called by:
  3192 ;;		_Lcd_Clear
  3193 ;;		_Lcd_Set_Cursor
  3194 ;;		_Lcd_Init
  3195 ;;		_Lcd_Shift_Right
  3196 ;;		_Lcd_Shift_Left
  3197 ;; This function uses a non-reentrant model
  3198 ;;
  3199                           
  3200     024E                     _Lcd_Cmd:	
  3201                           ;psect for function _Lcd_Cmd
  3202                           
  3203                           
  3204                           ;incstack = 0
  3205                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3206                           ;Lcd_Cmd@a stored from wreg
  3207     024E  00F3               	movwf	Lcd_Cmd@a
  3208     024F                     l1410:
  3209                           
  3210                           ;picUARTrx.c: 42:  RB0 = 0;
  3211     024F  1283               	bcf	3,5	;RP0=0, select bank0
  3212     0250  1303               	bcf	3,6	;RP1=0, select bank0
  3213     0251  1006               	bcf	6,0	;volatile
  3214     0252                     l1412:
  3215                           
  3216                           ;picUARTrx.c: 43:  Lcd_Port(a);
  3217     0252  0873               	movf	Lcd_Cmd@a,w
  3218     0253  120A  118A  22E3  120A  118A  	fcall	_Lcd_Port
  3219     0258                     l1414:
  3220                           
  3221                           ;picUARTrx.c: 44:  RB1 = 1;
  3222     0258  1283               	bcf	3,5	;RP0=0, select bank0
  3223     0259  1303               	bcf	3,6	;RP1=0, select bank0
  3224     025A  1486               	bsf	6,1	;volatile
  3225     025B                     l1416:
  3226                           
  3227                           ;picUARTrx.c: 45:     _delay((unsigned long)((4)*(20000000/4000.0)));
  3228     025B  301A               	movlw	26
  3229     025C  00F2               	movwf	??_Lcd_Cmd+1
  3230     025D  30F8               	movlw	248
  3231     025E  00F1               	movwf	??_Lcd_Cmd
  3232     025F                     u1457:
  3233     025F  0BF1               	decfsz	??_Lcd_Cmd,f
  3234     0260  2A5F               	goto	u1457
  3235     0261  0BF2               	decfsz	??_Lcd_Cmd+1,f
  3236     0262  2A5F               	goto	u1457
  3237     0263  0000               	nop
  3238     0264                     l1418:
  3239                           
  3240                           ;picUARTrx.c: 46:     RB1 = 0;
  3241     0264  1283               	bcf	3,5	;RP0=0, select bank0
  3242     0265  1303               	bcf	3,6	;RP1=0, select bank0
  3243     0266  1086               	bcf	6,1	;volatile
  3244     0267                     l46:
  3245     0267  0008               	return
  3246     0268                     __end_of_Lcd_Cmd:
  3247                           
  3248                           	psect	text19
  3249     02E3                     __ptext19:	
  3250 ;; *************** function _Lcd_Port *****************
  3251 ;; Defined at:
  3252 ;;		line 19 in file "picUARTrx.c"
  3253 ;; Parameters:    Size  Location     Type
  3254 ;;  a               1    wreg     unsigned char 
  3255 ;; Auto vars:     Size  Location     Type
  3256 ;;  a               1    0[COMMON] unsigned char 
  3257 ;; Return value:  Size  Location     Type
  3258 ;;                  1    wreg      void 
  3259 ;; Registers used:
  3260 ;;		wreg
  3261 ;; Tracked objects:
  3262 ;;		On entry : 0/0
  3263 ;;		On exit  : 0/0
  3264 ;;		Unchanged: 0/0
  3265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3266 ;;      Params:         0       0       0       0       0
  3267 ;;      Locals:         1       0       0       0       0
  3268 ;;      Temps:          0       0       0       0       0
  3269 ;;      Totals:         1       0       0       0       0
  3270 ;;Total ram usage:        1 bytes
  3271 ;; Hardware stack levels used: 1
  3272 ;; This function calls:
  3273 ;;		Nothing
  3274 ;; This function is called by:
  3275 ;;		_Lcd_Cmd
  3276 ;;		_Lcd_Init
  3277 ;;		_Lcd_Write_Char
  3278 ;; This function uses a non-reentrant model
  3279 ;;
  3280                           
  3281     02E3                     _Lcd_Port:	
  3282                           ;psect for function _Lcd_Port
  3283                           
  3284                           
  3285                           ;incstack = 0
  3286                           ; Regs used in _Lcd_Port: [wreg]
  3287                           ;Lcd_Port@a stored from wreg
  3288     02E3  00F0               	movwf	Lcd_Port@a
  3289     02E4                     l1322:
  3290                           
  3291                           ;picUARTrx.c: 20:  if(a & 1)
  3292     02E4  1C70               	btfss	Lcd_Port@a,0
  3293     02E5  2AE7               	goto	u1071
  3294     02E6  2AE8               	goto	u1070
  3295     02E7                     u1071:
  3296     02E7  2AEC               	goto	l35
  3297     02E8                     u1070:
  3298     02E8                     l1324:
  3299                           
  3300                           ;picUARTrx.c: 21:   RB2 = 1;
  3301     02E8  1283               	bcf	3,5	;RP0=0, select bank0
  3302     02E9  1303               	bcf	3,6	;RP1=0, select bank0
  3303     02EA  1506               	bsf	6,2	;volatile
  3304     02EB  2AEF               	goto	l36
  3305     02EC                     l35:	
  3306                           ;picUARTrx.c: 22:  else
  3307                           
  3308                           
  3309                           ;picUARTrx.c: 23:   RB2 = 0;
  3310     02EC  1283               	bcf	3,5	;RP0=0, select bank0
  3311     02ED  1303               	bcf	3,6	;RP1=0, select bank0
  3312     02EE  1106               	bcf	6,2	;volatile
  3313     02EF                     l36:
  3314                           
  3315                           ;picUARTrx.c: 25:  if(a & 2)
  3316     02EF  1CF0               	btfss	Lcd_Port@a,1
  3317     02F0  2AF2               	goto	u1081
  3318     02F1  2AF3               	goto	u1080
  3319     02F2                     u1081:
  3320     02F2  2AF5               	goto	l37
  3321     02F3                     u1080:
  3322     02F3                     l1326:
  3323                           
  3324                           ;picUARTrx.c: 26:   RB3 = 1;
  3325     02F3  1586               	bsf	6,3	;volatile
  3326     02F4  2AF6               	goto	l38
  3327     02F5                     l37:	
  3328                           ;picUARTrx.c: 27:  else
  3329                           
  3330                           
  3331                           ;picUARTrx.c: 28:   RB3 = 0;
  3332     02F5  1186               	bcf	6,3	;volatile
  3333     02F6                     l38:
  3334                           
  3335                           ;picUARTrx.c: 30:  if(a & 4)
  3336     02F6  1D70               	btfss	Lcd_Port@a,2
  3337     02F7  2AF9               	goto	u1091
  3338     02F8  2AFA               	goto	u1090
  3339     02F9                     u1091:
  3340     02F9  2AFC               	goto	l39
  3341     02FA                     u1090:
  3342     02FA                     l1328:
  3343                           
  3344                           ;picUARTrx.c: 31:   RB4 = 1;
  3345     02FA  1606               	bsf	6,4	;volatile
  3346     02FB  2AFD               	goto	l40
  3347     02FC                     l39:	
  3348                           ;picUARTrx.c: 32:  else
  3349                           
  3350                           
  3351                           ;picUARTrx.c: 33:   RB4 = 0;
  3352     02FC  1206               	bcf	6,4	;volatile
  3353     02FD                     l40:
  3354                           
  3355                           ;picUARTrx.c: 35:  if(a & 8)
  3356     02FD  1DF0               	btfss	Lcd_Port@a,3
  3357     02FE  2B00               	goto	u1101
  3358     02FF  2B01               	goto	u1100
  3359     0300                     u1101:
  3360     0300  2B03               	goto	l41
  3361     0301                     u1100:
  3362     0301                     l1330:
  3363                           
  3364                           ;picUARTrx.c: 36:   RB5 = 1;
  3365     0301  1686               	bsf	6,5	;volatile
  3366     0302  2B04               	goto	l43
  3367     0303                     l41:	
  3368                           ;picUARTrx.c: 37:  else
  3369                           
  3370                           
  3371                           ;picUARTrx.c: 38:   RB5 = 0;
  3372     0303  1286               	bcf	6,5	;volatile
  3373     0304                     l43:
  3374     0304  0008               	return
  3375     0305                     __end_of_Lcd_Port:
  3376                           
  3377                           	psect	text20
  3378     021C                     __ptext20:	
  3379 ;; *************** function _LCD *****************
  3380 ;; Defined at:
  3381 ;;		line 137 in file "picUARTrx.c"
  3382 ;; Parameters:    Size  Location     Type
  3383 ;;		None
  3384 ;; Auto vars:     Size  Location     Type
  3385 ;;  a               2    0        unsigned int 
  3386 ;; Return value:  Size  Location     Type
  3387 ;;                  1    wreg      void 
  3388 ;; Registers used:
  3389 ;;		status,2
  3390 ;; Tracked objects:
  3391 ;;		On entry : 0/0
  3392 ;;		On exit  : 0/0
  3393 ;;		Unchanged: 0/0
  3394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3395 ;;      Params:         0       0       0       0       0
  3396 ;;      Locals:         0       0       0       0       0
  3397 ;;      Temps:          0       0       0       0       0
  3398 ;;      Totals:         0       0       0       0       0
  3399 ;;Total ram usage:        0 bytes
  3400 ;; Hardware stack levels used: 1
  3401 ;; This function calls:
  3402 ;;		Nothing
  3403 ;; This function is called by:
  3404 ;;		_main
  3405 ;; This function uses a non-reentrant model
  3406 ;;
  3407                           
  3408     021C                     _LCD:	
  3409                           ;psect for function _LCD
  3410                           
  3411     021C                     l1510:	
  3412                           ;incstack = 0
  3413                           ; Regs used in _LCD: [status,2]
  3414                           
  3415                           
  3416                           ;picUARTrx.c: 138:     unsigned int a;;picUARTrx.c: 139:     TRISB = 0x00;
  3417     021C  1683               	bsf	3,5	;RP0=1, select bank1
  3418     021D  1303               	bcf	3,6	;RP1=0, select bank1
  3419     021E  0186               	clrf	6	;volatile
  3420     021F                     l80:
  3421     021F  0008               	return
  3422     0220                     __end_of_LCD:
  3423     007E                     btemp	set	126	;btemp
  3424     007E                     wtemp0	set	126
  3425                           
  3426                           	psect	config
  3427                           
  3428                           ;Config register CONFIG @ 0x2007
  3429                           ;	Oscillator Selection bits
  3430                           ;	FOSC = HS, HS oscillator
  3431                           ;	Watchdog Timer Enable bit
  3432                           ;	WDTE = OFF, WDT disabled
  3433                           ;	Power-up Timer Enable bit
  3434                           ;	PWRTE = ON, PWRT enabled
  3435                           ;	Brown-out Reset Enable bit
  3436                           ;	BOREN = ON, BOR enabled
  3437                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  3438                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  3439                           ;	Data EEPROM Memory Code Protection bit
  3440                           ;	CPD = OFF, Data EEPROM code protection off
  3441                           ;	Flash Program Memory Write Enable bits
  3442                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  3443                           ;	In-Circuit Debugger Mode bit
  3444                           ;	DEBUG = 0x1, unprogrammed default
  3445                           ;	Flash Program Memory Code Protection bit
  3446                           ;	CP = OFF, Code protection off
  3447     2007                     	org	8199
  3448     2007  3F72               	dw	16242

Data Sizes:
    Strings     9
    Constant    0
    Data        0
    BSS         79
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     33      72
    BANK1            80      0      40
    BANK3            96     92      92
    BANK2            96      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(1) Largest target is 0

    f$.$source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(1) Largest target is 0

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 80
		 -> main@adcDisplay(BANK3[80]), 

    S693$buffer	PTR unsigned char  size(1) Largest target is 0

    S693$source	PTR const unsigned char  size(1) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 9
		 -> STR_1(CODE[9]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 80
		 -> main@adcDisplay(BANK3[80]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 9
		 -> STR_1(CODE[9]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 9
		 -> STR_1(CODE[9]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 9
		 -> STR_1(CODE[9]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 


Critical Paths under _main in COMMON

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                94    94      0    6234
                                             31 BANK0      2     2      0
                                              0 BANK3     92    92      0
                                _LCD
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                       _UART_Init_Rx
                          _UART_Read
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    16      5    4229
                                             12 BANK0     19    14      5
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             4     2      2    3919
                                              8 BANK0      4     2      2
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           12    10      2    3610
                                             10 COMMON     4     2      2
                                              0 BANK0      8     8      0
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     934
                                              0 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _abs                                                  4     2      2     142
                                              6 COMMON     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     311
                                              0 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     314
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     448
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     452
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _UART_Read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Init_Rx                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     4     4      0     400
                                              5 COMMON     4     4      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1     954
                                              4 COMMON     6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LCD                                                  2     2      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _UART_Init_Rx
   _UART_Read
   _sprintf
     _vfprintf
       _vfpfcnvrt
         ___awdiv
         ___awmod
         ___lwdiv
         ___lwmod
         _abs
           ___awmod (ARG)
         _fputc
           _putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      DA       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     21      48       5       90.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      28       7       50.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60     5C      5C       9       95.8%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      DA      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sat Dec 21 18:01:26 2024

                       _s 00B4                         pc 0002                        l40 02FD  
                      l41 0303                        l43 0304                        l35 02EC  
                      l36 02EF                        l37 02F5                        l38 02F6  
                      l46 0267                        l62 04C6                        l39 02FC  
                      l55 05BA                        l71 02C1                        l80 021F  
                      l49 023C                        l65 0339                        l59 05BA  
                      l83 0281                        l86 0220                        l89 0227  
            ___awdiv@sign 0075                        fsr 0004                       l362 0468  
                     l349 052D                       l723 024D                       l476 03B7  
                     l716 02E2                       l486 0373                       l735 040F  
                     l746 021B                       l659 02A0                       l697 07EA  
                     _LCD 021C                       _RB0 0030                       _RB1 0031  
                     _RB2 0032                       _RB3 0033                       _RB4 0034  
                     _RB5 0035                       u700 04CC                       u701 04CB  
                     u710 04D7                       u711 04D6                       u720 04E8  
                     u800 0415                       u721 04E7                       u801 0414  
                     u810 0420                       u811 041F                       u740 04FA  
                     u820 042B                       u741 04F9                       u821 042A  
                     u910 038E                       u735 04EC                       u911 038D  
                     u760 050B                       u840 043D                       u761 050A  
                     u841 043C                       u905 0380                       u850 0447  
                     u930 039F                       u755 04FB                       u851 0446  
                     u835 042F                       u931 039E                       u780 051F  
                     u781 051E                       u765 0507                       u925 038F  
                     u790 0524                       u870 045A                       u950 03B3  
                     u791 0523                       u775 0513                       u871 0459  
                     u855 0443                       u951 03B2                       u935 039B  
                     u880 045F                       u960 0340                       u881 045E  
                     u865 044E                       u945 03A7                       u961 033F  
                     u890 037C                       u891 037B                       u980 0352  
                     u981 0351                       u990 035C                       u991 035B  
                     u975 0344                       u995 0358                       _abs 023D  
                     fsr0 0004                       indf 0000              ___awmod@sign 0075  
                    ?_LCD 0070                      l1200 0511                      l1210 0529  
                    l1202 0512                      ?_abs 0076                      l1204 0519  
                    l1220 041A                      l1300 03B8                      l1206 051F  
                    l1230 042E                      l1222 041C                      l1214 0410  
                    l1310 03F6                      l1302 03BD                      l1208 0524  
                    l1240 044D                      l1232 0435                      l1224 0420  
                    l1216 0411                      l1304 03C2                      l1400 07CB  
                    l1330 0301                      l1322 02E4                      l1410 024F  
                    l1170 04C7                      l1242 0454                      l1234 0439  
                    l1226 0425                      l1218 0415                      l1314 023D  
                    l1306 03C9                      l1324 02E8                      l1412 0252  
                    l1500 048D                      l1420 0306                      l1180 04D7  
                    l1172 04C8                      l1236 043D                      l1228 042B  
                    l1244 045A                      l1260 0386                      l1252 0374  
                    l1316 0241                      l1308 03D8                      l1340 06A1  
                    l1404 07D3                      l1332 0681                      l1510 021C  
                    l1326 02F3                      l1414 0258                      l1430 0325  
                    l1422 030C                      l1502 02A2                      l1190 04EB  
                    l1182 04DC                      l1174 04CC                      l1246 045F  
                    l1238 0447                      l1270 03A6                      l1262 038A  
                    l1254 0376                      l1318 0242                      l1350 06CF  
                    l1342 06A5                      l1334 0690                      l1328 02FA  
                    l1416 025B                      l1432 0328                      l1424 030F  
                    l1504 02A5                      l1512 0268                      l1520 0220  
                    l1192 04F2                      l1184 04E0                      l1176 04D1  
                    l1248 0464                      l1272 03AD                      l1264 038E  
                    l1256 037C                      l1280 0340                      l1360 0712  
                    l1352 06D1                      l1344 06B1                      l1336 0696  
                    l1440 02C5                      l1418 0264                      l1450 0230  
                    l1434 032E                      l1426 031D                      l1506 02B0  
                    l1514 027B                      l1522 0226                      l1194 04F6  
                    l1186 04E2                      l1178 04D3                      l1266 039F  
                    l1258 037F                      l1274 03B3                      l1290 035C  
                    l1282 0343                      l1370 073C                      l1362 0717  
                    l1354 06D8                      l1346 06BD                      l1338 069D  
                    l1442 02C8                      l1530 028B                      l1460 054A  
                    l1452 052F                      l1436 0331                      l1428 0320  
                    l1508 02B6                      l1516 027F                      l1196 04FA  
                    l1188 04E8                      l1268 03A5                      l1292 0362  
                    l1284 034A                      l1380 0768                      l1364 071C  
                    l1372 0742                      l1356 06F7                      l1348 06CA  
                    l1444 02D2                      l1532 028D                      l1470 056D  
                    l1454 0534                      l1462 0551                      l1438 0336  
                    l1518 0280                      l1198 050B                      l1294 0369  
                    l1286 034E                      l1278 033A                      l1390 07A1  
                    l1382 076A                      l1366 0721                      l1358 070C  
                    l1374 0749                      l1446 02E0                      l1534 0297  
                    l1526 0285                      l1480 0590                      l1464 0557  
                    l1472 0574                      l1456 0541                      l1288 0352  
                    l1296 036F                      l1392 07B3                      l1384 0780  
                    l1376 0755                      l1368 072A                      l1528 0289  
                    l1560 05CA                      l1490 05B3                      l1474 057A  
                    l1482 0597                      l1466 0564                      l1458 0544  
                    l1394 07B9                      l1386 0795                      l1378 0762  
                    l1570 05E3                      l1562 05CF                      l1554 05BB  
                    l1492 0469                      l1484 059D                      l1476 0587  
                    l1468 0567                      l1388 079B                      l1580 0643  
                    l1572 05F2                      l1556 05C0                      l1494 046F  
                    l1486 05AA                      l1478 058A                      l1398 07C0  
                    l1590 0673                      l1582 0649                      l1574 0626  
                    l1558 05C5                      l1496 0478                      l1488 05AD  
                    l1584 0657                      l1576 062E                      l1568 05D3  
                    l1498 0487                      l1586 065F                      l1578 063B  
                    l1588 066D                      STR_1 0009                      u1010 036F  
                    u1011 036E                      u1100 0301                      u1020 03BD  
                    u1101 0300                      u1005 0363                      u1021 03BC  
                    u1030 03C2                      u1110 0690                      u1031 03C1  
                    u1111 068F                      u1040 03D8                      u1200 0748  
                    u1120 06B1                      u1041 03D7                      u1201 0747  
                    u1121 06B0                      u1050 03F6                      u1210 0755  
                    u1130 06BD                      u1051 03F5                      u1211 0754  
                    u1131 06BC                      u1060 0241                      u1220 079B  
                    u1140 06D6                      u1061 0240                      u1221 079A  
                    u1141 06D4                      u1070 02E8                      u1310 057A  
                    u1230 07A0                      u1150 06D7                      u1071 02E7  
                    u1311 0579                      u1055 03F2                      u1231 079F  
                    u1080 02F3                      u1240 07BF                      u1160 0712  
                    u1081 02F2                      u1305 055D                      u1241 07BE  
                    u1161 0711                      u1090 02FA                      u1330 059D  
                    u1170 0717                      u1091 02F9                      u1331 059C  
                    u1171 0716                      u1180 071C                      u1260 02E0  
                    u1325 0580                      u1181 071B                      u1261 02DF  
                    u1270 0534                      u1350 02C1                      u1190 0721  
                    u1271 0533                      u1407 0322                      u1255 0312  
                    u1351 02C0                      u1191 0720                      u1360 0226  
                    u1345 05A3                      u1417 0333                      u1361 0225  
                    u1290 0557                      u1427 0473                      u1291 0556  
                    u1380 063B                      u1437 0482                      u1285 053A  
                    u1381 063A                      u1447 0491                      u1457 025F  
                    u1385 0637                      u1397 0677                      abs@a 0076  
       ?_Lcd_Write_String 0070                      _dbuf 0020                      _main 05BB  
                    _prec 0042                      btemp 007E                      start 0000  
      ??_Lcd_Write_String 0075           __end_of_Lcd_Cmd 0268                     ??_LCD 0070  
                   ??_abs 0078                     ?_main 0070           __end_of___awdiv 052E  
         __end_of___awmod 0469           ___awdiv@divisor 0070           __end_of___lwdiv 03B8  
         __end_of___lwmod 0374           ___awdiv@counter 0074                     _RCREG 001A  
            vfpfcnvrt@fmt 007A                     _SPBRG 0099                     _TRISB 0086  
                   _flags 0046              main@low_byte 01E9                     _fputc 03B8  
                   _width 0040                     _putch 021B                     main@i 01EA  
                   pclath 000A             main@adcValues 01E0                     status 0003  
                   wtemp0 007E           __end_of_sprintf 02A1          __end_of_Lcd_Init 04C7  
        __end_of_Lcd_Port 0305           __initialization 07EB              __end_of_main 067E  
                  ??_main 0066             main@high_byte 01E8                    ?_fputc 0070  
        ___awdiv@dividend 0072                    ?_putch 0070                 ??_Lcd_Cmd 0071  
           vfpfcnvrt@done 0047              vfprintf@cfmt 0052         __end_of_UART_Read 0228  
               ??___awdiv 0074                 ??___awmod 0074                 ??___lwdiv 0074  
               ??___lwmod 0074            main@adcDisplay 0190          ___awdiv@quotient 0076  
         ___awmod@divisor 0070           ___awmod@counter 0074                    fputc@c 0070  
                  putch@c 0070          __end_of_vfprintf 02E3                 ??_sprintf 0058  
         Lcd_Set_Cursor@a 0076           Lcd_Set_Cursor@b 0074           Lcd_Set_Cursor@y 0078  
         Lcd_Set_Cursor@z 0077   __end_of__initialization 07FC         __end_of_Lcd_Clear 023D  
          __pcstackCOMMON 0070             __end_of_fputc 0410             __end_of_putch 021C  
          _Lcd_Set_Cursor 052E                 ?_Lcd_Init 0070                 ?_Lcd_Port 0070  
                 ??_fputc 0073                   ??_putch 0070                __pbssBANK0 0020  
              __pbssBANK1 00A0                __pmaintext 05BB    __end_of_Lcd_Set_Cursor 05BB  
              ??_Lcd_Init 0074                ??_Lcd_Port 0070                __stringtab 0003  
          _Lcd_Write_Char 0305             ?_UART_Init_Rx 0070                   _Lcd_Cmd 024E  
                 ___awdiv 04C7                   ___awmod 0410                   ___lwdiv 0374  
                 ___lwmod 033A                 ?_vfprintf 004F           ?_Lcd_Set_Cursor 0074  
                 __ptext1 0282                   __ptext2 02C2                   __ptext3 067E  
                 __ptext4 03B8                   __ptext5 021B                   __ptext6 023D  
                 __ptext7 033A                   __ptext8 0374                   __ptext9 0410  
        ___awmod@dividend 0072                   _sprintf 0282                   clrloop0 0229  
  __end_of_Lcd_Write_Char 033A      end_of_initialization 07FC            ??_UART_Init_Rx 0070  
                 fputc@fp 0072         __end_of_vfpfcnvrt 07EB                 _RCSTAbits 0018  
        vfpfcnvrt@convarg 004A                 Lcd_Port@a 0070                ??_vfprintf 007E  
               _UART_Read 0220                 _TRISCbits 0087           ?_Lcd_Write_Char 0070  
       Lcd_Write_String@a 0078         Lcd_Write_String@i 0076                 _TXSTAbits 0098  
               _Lcd_Clear 0230               vfpfcnvrt@ap 007B               vfpfcnvrt@cp 0049  
             vfpfcnvrt@fp 0048          _Lcd_Write_String 02A1                ?_UART_Read 0070  
     start_initialization 07EB               __end_of_LCD 0220               __end_of_abs 024E  
             vfprintf@fmt 004F                ?_Lcd_Clear 0070           Lcd_Write_Char@a 0074  
         Lcd_Write_Char@y 0073      __end_of_UART_Init_Rx 0282                 ___latbits 0002  
           __pcstackBANK0 0047             __pcstackBANK3 0190                  ?_Lcd_Cmd 0070  
        ___lwdiv@dividend 0072          ??_Lcd_Set_Cursor 0075                  ?___awdiv 0070  
                ?___awmod 0070                  ?___lwdiv 0070                  ?___lwmod 0070  
             ??_UART_Read 0070                 __pstrings 0003          ___lwdiv@quotient 0074  
                ?_sprintf 0053              _receivedData 00A0                 clear_ram0 0228  
                Lcd_Cmd@a 0073                  _PIR1bits 000C               ??_Lcd_Clear 0074  
               _vfpfcnvrt 067E               __stringbase 0008          ??_Lcd_Write_Char 0071  
                _Lcd_Init 0469                  _Lcd_Port 02E3                vfpfcnvrt@c 004E  
__end_of_Lcd_Write_String 02C2                vfprintf@ap 0050                vfprintf@fp 0051  
              ?_vfpfcnvrt 007A        __end_of__stringtab 0009                sprintf@fmt 0053  
         ___lwdiv@divisor 0070           ___lwdiv@counter 0076                  __ptext10 04C7  
                __ptext11 0220                  __ptext20 021C                  __ptext12 0268  
                __ptext13 02A1                  __ptext14 0305                  __ptext15 052E  
                __ptext16 0469                  __ptext17 0230                  __ptext18 024E  
                __ptext19 02E3              _UART_Init_Rx 0268                  _vfprintf 02C2  
          _received_value 0044        Lcd_Write_Char@temp 0072                 sprintf@ap 0059  
        ___lwmod@dividend 0072                 stringcode 0003               ??_vfpfcnvrt 007C  
      Lcd_Set_Cursor@temp 0079                  sprintf@f 005B                  sprintf@s 005A  
         ___lwmod@divisor 0070           ___lwmod@counter 0074                  stringdir 0003  
                stringtab 0003  
